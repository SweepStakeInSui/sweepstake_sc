type NewAdmin @entity(immutable: true) {
  id: Bytes!
  admin: Bytes! # address
  newAdminAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type QuestionInitialized @entity(immutable: true) {
  id: Bytes!
  questionID: Bytes! # bytes32
  ancillaryData: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemovedAdmin @entity(immutable: true) {
  id: Bytes!
  admin: Bytes! # address
  removedAdmin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type DisputePrice @entity(immutable: true) {
  id: Bytes!
  requester: Bytes! # address
  proposer: Bytes! # address
  disputer: Bytes! # address
  identifier: Bytes! # bytes32
  timestamp: BigInt! # uint256
  ancillaryData: Bytes! # bytes
  proposedPrice: BigInt! # int256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposePrice @entity(immutable: true) {
  id: Bytes!
  requester: Bytes! # address
  proposer: Bytes! # address
  identifier: Bytes! # bytes32
  timestamp: BigInt! # uint256
  ancillaryData: Bytes! # bytes
  proposedPrice: BigInt! # int256
  expirationTimestamp: BigInt! # uint256
  currency: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RequestPrice @entity(immutable: true) {
  id: Bytes!
  requester: Bytes! # address
  identifier: Bytes! # bytes32
  timestamp: BigInt! # uint256
  ancillaryData: Bytes! # bytes
  currency: Bytes! # address
  reward: BigInt! # uint256
  finalFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Settle @entity(immutable: true) {
  id: Bytes!
  requester: Bytes! # address
  proposer: Bytes! # address
  disputer: Bytes! # address
  identifier: Bytes! # bytes32
  timestamp: BigInt! # uint256
  ancillaryData: Bytes! # bytes
  price: BigInt! # int256
  payout: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
