{
  "id": "f30a3001030fdd7af33b2d616bdf47bd",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.15",
  "solcLongVersion": "0.8.15+commit.e14f2714",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "contracts/interfaces/IAuth.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\ninterface IAuthEE {\n    error NotAdmin();\n\n    /// @notice Emitted when a new admin is added\n    event NewAdmin(address indexed admin, address indexed newAdminAddress);\n\n    /// @notice Emitted when an admin is removed\n    event RemovedAdmin(address indexed admin, address indexed removedAdmin);\n}\n\ninterface IAuth is IAuthEE {\n    function isAdmin(address) external view returns (bool);\n\n    function addAdmin(address) external;\n\n    function removeAdmin(address) external;\n\n    function renounceAdmin() external;\n}\n"
      },
      "contracts/interfaces/IFinder.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.15;\n\n/**\n * @title Provides addresses of the live contracts implementing certain interfaces.\n * @dev Examples are the Oracle or Store interfaces.\n */\ninterface IFinder {\n    /**\n     * @notice Updates the address of the contract that implements `interfaceName`.\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n     * @param implementationAddress address of the deployed contract that implements the interface.\n     */\n    function changeImplementationAddress(bytes32 interfaceName, address implementationAddress) external;\n\n    /**\n     * @notice Gets the address of the contract that implements the given `interfaceName`.\n     * @param interfaceName queried interface.\n     * @return implementationAddress address of the deployed contract that implements the interface.\n     */\n    function getImplementationAddress(bytes32 interfaceName) external view returns (address);\n}\n"
      },
      "contracts/interfaces/IOptimisticOracleV2.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IFinder.sol\";\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract IOptimisticOracleV2 {\n    event RequestPrice(\n        address indexed requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        address currency,\n        uint256 reward,\n        uint256 finalFee\n    );\n    event ProposePrice(\n        address indexed requester,\n        address indexed proposer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice,\n        uint256 expirationTimestamp,\n        address currency\n    );\n    event DisputePrice(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice\n    );\n    event Settle(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 price,\n        uint256 payout\n    );\n    // Struct representing the state of a price request.\n    enum State {\n        Invalid, // Never requested.\n        Requested, // Requested, no other actions taken.\n        Proposed, // Proposed, but not expired or disputed yet.\n        Expired, // Proposed, not disputed, past liveness.\n        Disputed, // Disputed, but no DVM price returned yet.\n        Resolved, // Disputed and DVM price is available.\n        Settled // Final price has been set in the contract (can get here from Expired or Resolved).\n    }\n\n    struct RequestSettings {\n        bool eventBased; // True if the request is set to be event-based.\n        bool refundOnDispute; // True if the requester should be refunded their reward on dispute.\n        bool callbackOnPriceProposed; // True if callbackOnPriceProposed callback is required.\n        bool callbackOnPriceDisputed; // True if callbackOnPriceDisputed callback is required.\n        bool callbackOnPriceSettled; // True if callbackOnPriceSettled callback is required.\n        uint256 bond; // Bond that the proposer and disputer must pay on top of the final fee.\n        uint256 customLiveness; // Custom liveness value set by the requester.\n    }\n\n    // Struct representing a price request.\n    struct Request {\n        address proposer; // Address of the proposer.\n        address disputer; // Address of the disputer.\n        IERC20 currency; // ERC20 token used to pay rewards and fees.\n        bool settled; // True if the request is settled.\n        RequestSettings requestSettings; // Custom settings associated with a request.\n        int256 proposedPrice; // Price that the proposer submitted.\n        int256 resolvedPrice; // Price resolved once the request is settled.\n        uint256 expirationTime; // Time at which the request auto-settles without a dispute.\n        uint256 reward; // Amount of the currency to pay to the proposer on settlement.\n        uint256 finalFee; // Final fee to pay to the Store upon request to the DVM.\n    }\n\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` value otherwise it is possible\n    // that a price can be requested to this contract successfully, but cannot be disputed because the DVM refuses\n    // to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n\n    function defaultLiveness() external view virtual returns (uint256);\n\n    function finder() external view virtual returns (IFinder);\n\n    function getCurrentTime() external view virtual returns (uint256);\n\n    // Note: this is required so that typechain generates a return value with named fields.\n    mapping(bytes32 => Request) public requests;\n\n    /**\n     * @notice Requests a new price.\n     * @param identifier price identifier being requested.\n     * @param timestamp timestamp of the price being requested.\n     * @param ancillaryData ancillary data representing additional args being passed with the price request.\n     * @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n     * @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n     *               which could make sense if the contract requests and proposes the value in the same call or\n     *               provides its own reward system.\n     * @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n     * This can be changed with a subsequent call to setBond().\n     */\n    function requestPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        IERC20 currency,\n        uint256 reward\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Set the proposal bond associated with a price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param bond custom bond amount to set.\n     * @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n     * changed again with a subsequent call to setBond().\n     */\n    function setBond(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 bond\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n     * in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n     * bond, so there is still profit to be made even if the reward is refunded.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setRefundOnDispute(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n     * being auto-resolved.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param customLiveness new custom liveness.\n     */\n    function setCustomLiveness(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 customLiveness\n    ) external virtual;\n\n    /**\n     * @notice Sets the request to be an \"event-based\" request.\n     * @dev Calling this method has a few impacts on the request:\n     *\n     * 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated\n     *    with the request.\n     *\n     * 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who\n     *    prematurely proposes a response loses their bond.\n     *\n     * 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to\n     *    the requesting contract.\n     *\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setEventBased(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets which callbacks should be enabled for the request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param callbackOnPriceProposed whether to enable the callback onPriceProposed.\n     * @param callbackOnPriceDisputed whether to enable the callback onPriceDisputed.\n     * @param callbackOnPriceSettled whether to enable the callback onPriceSettled.\n     */\n    function setCallbacks(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        bool callbackOnPriceProposed,\n        bool callbackOnPriceDisputed,\n        bool callbackOnPriceSettled\n    ) external virtual;\n\n    /**\n     * @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n     * from this proposal. However, any bonds are pulled from the caller.\n     * @param proposer address to set as the proposer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePriceFor(\n        address proposer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Proposes a price value for an existing price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n     * receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n     * @param disputer address to set as the disputer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was value (the proposal was incorrect).\n     */\n    function disputePriceFor(\n        address disputer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price value for an existing price request with an active proposal.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was valid (the proposal was incorrect).\n     */\n    function disputePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n     * or settleable. Note: this method is not view so that this call may actually settle the price request if it\n     * hasn't been settled.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return resolved price.\n     */\n    function settleAndGetPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (int256);\n\n    /**\n     * @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n     * the returned bonds as well as additional rewards.\n     */\n    function settle(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 payout);\n\n    /**\n     * @notice Gets the current data structure containing all information about a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the Request data structure.\n     */\n    function getRequest(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (Request memory);\n\n    /**\n     * @notice Returns the state of a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the State enum value.\n     */\n    function getState(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (State);\n\n    /**\n     * @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return true if price has resolved or settled, false otherwise.\n     */\n    function hasPrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (bool);\n\n    function stampAncillaryData(bytes memory ancillaryData, address requester)\n    public\n    view\n    virtual\n    returns (bytes memory);\n}"
      },
      "contracts/mixins/Auth.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { IAuth } from \"../interfaces/IAuth.sol\";\n\n/// @title Auth\n/// @notice Provides access control modifiers\nabstract contract Auth is IAuth {\n    /// @notice Auth\n    mapping(address => uint256) public admins;\n\n    modifier onlyAdmin() {\n        if (admins[msg.sender] != 1) revert NotAdmin();\n        _;\n    }\n\n    constructor() {\n        admins[msg.sender] = 1;\n    }\n\n    /// @notice Adds an Admin\n    /// @param admin - The address of the admin\n    function addAdmin(address admin) external onlyAdmin {\n        admins[admin] = 1;\n        emit NewAdmin(msg.sender, admin);\n    }\n\n    /// @notice Removes an admin\n    /// @param admin - The address of the admin to be removed\n    function removeAdmin(address admin) external onlyAdmin {\n        admins[admin] = 0;\n        emit RemovedAdmin(msg.sender, admin);\n    }\n\n    /// @notice Renounces Admin privileges from the caller\n    function renounceAdmin() external onlyAdmin {\n        admins[msg.sender] = 0;\n        emit RemovedAdmin(msg.sender, msg.sender);\n    }\n\n    /// @notice Checks if an address is an admin\n    /// @param addr - The address to be checked\n    function isAdmin(address addr) external view returns (bool) {\n        return admins[addr] == 1;\n    }\n}\n"
      },
      "contracts/SweepstakeUma.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport {IOptimisticOracleV2} from \"./interfaces/IOptimisticOracleV2.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Auth} from \"./mixins/Auth.sol\";\n\ncontract SweepstakeUma is Auth {\n    // OO on Polygon Amoy\n    IOptimisticOracleV2 oo = IOptimisticOracleV2(0x38fAc33bD20D4c4Cce085C0f347153C06CbA2968);\n\n    // For now, sweepstake only supports YES/NO\n    bytes32 identifier = bytes32(\"YES_OR_NO_QUERY\");\n\n    // Post the question in ancillary data. Note that this is a simplified form of ancillry data to work as an example. A real\n    // world prodition market would use something slightly more complex and would need to conform to a more robust structure.\n    // bytes ancillaryData =\n    //     bytes(\"Q:TEST QUESTION FROM 18DRAPLY? A:1 for yes. 0 for no.\");\n\n    event QuestionInitialized(bytes32 indexed questionID, bytes ancillaryData);\n\n    struct QuestionData {\n        /// @notice creator address on SUI\n        string creator;\n        /// @notice marketID on sweepstake\n        string marketID;\n        /// @notice Data used to reslove a condition\n        bytes ancillaryData;\n        /// @notice Solved\n        bool resolved;\n    }\n\n    uint256 requestTime = 0;\n\n    mapping(bytes32 => QuestionData) public questions;\n\n    uint256 public liveness;\n\n    constructor() {\n        liveness = 30;\n    }\n\n\n    // Set the liveness of the request. This is the time in seconds that the request will be live for.\n    /// @param _liveness: liveness of the request\n    function setLiveness(uint256 _liveness) public onlyAdmin {\n        liveness = _liveness;\n    }\n\n    // Submit a data request to the Optimistic oracle.\n    /// @param creator: address of creator in SUI\n    /// @param marketID: marketID in sweepstake\n    /// @param ancillaryString: the description of market\n    /// ex: \"Q:Did the temperature on the 25th of July 2022 in Manhattan NY exceed 35c? A:1 for yes. 0 for no.\"\n    function requestData(\n        string calldata creator,\n        string calldata marketID,\n        string memory ancillaryString\n    ) external returns (bytes32 questionID) {\n        requestTime = block.timestamp; // Set the request time to the current block time.\n        IERC20 bondCurrency = IERC20(\n            0x9b4A302A548c7e313c2b74C461db7b84d3074A84\n        );\n        uint256 reward = 0; // Set the reward to 0 (so we dont have to fund it from this contract).\n        bytes memory ancillaryData = bytes(ancillaryString);\n        questionID = keccak256(ancillaryData);\n        _saveQuestion(questionID, creator, marketID, ancillaryData, false);\n\n        //The liveness to 30 so it will settle quickly.\n        oo.requestPrice(\n            identifier,\n            requestTime,\n            ancillaryData,\n            bondCurrency,\n            reward\n        );\n        oo.setCustomLiveness(identifier, requestTime, ancillaryData, liveness);\n\n        emit QuestionInitialized(questionID, ancillaryData);\n    }\n\n    // Settle the request once it's gone through the liveness. This acts the finalize the voted on price.\n    /// @param questionID: questionID of a market\n    function settleRequest(bytes32 questionID) public {\n        QuestionData memory quest = questions[questionID];\n        oo.settle(address(this), identifier, requestTime, quest.ancillaryData);\n        _saveQuestion(\n            questionID,\n            quest.creator,\n            quest.marketID,\n            quest.ancillaryData,\n            true\n        );\n    }\n\n    // Fetch the resolved price from the Optimistic Oracle that was settled.\n    /// @param questionID: questionID of a market\n    function getSettledData(bytes32 questionID) public view returns (int256) {\n        QuestionData memory quest = questions[questionID];\n        return\n            oo\n            .getRequest(\n                address(this),\n                identifier,\n                requestTime,\n                quest.ancillaryData\n            )\n            .resolvedPrice;\n    }\n\n    function _saveQuestion(\n        bytes32 questionID,\n        string memory creator,\n        string memory marketID,\n        bytes memory ancillaryData,\n        bool resolved\n    ) internal {\n        questions[questionID] = QuestionData({\n            creator: creator,\n            marketID: marketID,\n            ancillaryData: ancillaryData,\n            resolved: resolved\n        });\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nameLocation": "213:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 11,
                  "name": "Transfer",
                  "nameLocation": "395:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "404:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "426:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "446:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:0"
                  },
                  "src": "389:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 20,
                  "name": "Approval",
                  "nameLocation": "626:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "635:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "658:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "683:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:0"
                  },
                  "src": "620:78:0"
                },
                {
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:0",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "820:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:0"
                  },
                  "scope": 77,
                  "src": "774:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:0",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 34,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "930:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:0"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "970:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:0"
                  },
                  "scope": 77,
                  "src": "911:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 35,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:0",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 44,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1221:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1233:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1266:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:0"
                  },
                  "scope": 77,
                  "src": "1203:69:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 54,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1566:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1581:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:0"
                  },
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1621:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:0"
                  },
                  "scope": 77,
                  "src": "1547:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:0",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 64,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2325:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2342:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2375:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:0"
                  },
                  "scope": 77,
                  "src": "2308:73:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 65,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:0",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 76,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2711:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2725:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2737:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2770:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:0"
                  },
                  "scope": 77,
                  "src": "2689:87:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 78,
              "src": "203:2575:0",
              "usedErrors": []
            }
          ],
          "src": "106:2673:0"
        },
        "id": 0
      },
      "contracts/SweepstakeUma.sol": {
        "ast": {
          "absolutePath": "contracts/SweepstakeUma.sol",
          "exportedSymbols": {
            "Auth": [
              860
            ],
            "IERC20": [
              77
            ],
            "IOptimisticOracleV2": [
              744
            ],
            "SweepstakeUma": [
              316
            ]
          },
          "id": 317,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "contracts/interfaces/IOptimisticOracleV2.sol",
              "file": "./interfaces/IOptimisticOracleV2.sol",
              "id": 81,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 317,
              "sourceUnit": 745,
              "src": "57:73:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 80,
                    "name": "IOptimisticOracleV2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 744,
                    "src": "65:19:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 83,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 317,
              "sourceUnit": 78,
              "src": "131:70:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 82,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 77,
                    "src": "139:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/mixins/Auth.sol",
              "file": "./mixins/Auth.sol",
              "id": 85,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 317,
              "sourceUnit": 861,
              "src": "202:39:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 84,
                    "name": "Auth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 860,
                    "src": "210:4:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 86,
                    "name": "Auth",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 860,
                    "src": "269:4:1"
                  },
                  "id": 87,
                  "nodeType": "InheritanceSpecifier",
                  "src": "269:4:1"
                }
              ],
              "canonicalName": "SweepstakeUma",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 316,
              "linearizedBaseContracts": [
                316,
                860,
                358,
                335
              ],
              "name": "SweepstakeUma",
              "nameLocation": "252:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "oo",
                  "nameLocation": "326:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "306:88:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                    "typeString": "contract IOptimisticOracleV2"
                  },
                  "typeName": {
                    "id": 89,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88,
                      "name": "IOptimisticOracleV2",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 744,
                      "src": "306:19:1"
                    },
                    "referencedDeclaration": 744,
                    "src": "306:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                      "typeString": "contract IOptimisticOracleV2"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307833386641633333624432304434633443636530383543306633343731353343303643624132393638",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "351:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x38fAc33bD20D4c4Cce085C0f347153C06CbA2968"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 90,
                      "name": "IOptimisticOracleV2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 744,
                      "src": "331:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IOptimisticOracleV2_$744_$",
                        "typeString": "type(contract IOptimisticOracleV2)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "331:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                      "typeString": "contract IOptimisticOracleV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "457:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "449:47:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5945535f4f525f4e4f5f5155455259",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "478:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9309974e6ae3a6f17ba5a0e7ffaaa9048ae786cf68926e4dfb293a348fda63af",
                          "typeString": "literal_string \"YES_OR_NO_QUERY\""
                        },
                        "value": "YES_OR_NO_QUERY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9309974e6ae3a6f17ba5a0e7ffaaa9048ae786cf68926e4dfb293a348fda63af",
                          "typeString": "literal_string \"YES_OR_NO_QUERY\""
                        }
                      ],
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "470:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "470:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f0f7f4e8df0afc32374e8c8a070dd345a4b6321861869a555976c21703f73d9a",
                  "id": 105,
                  "name": "QuestionInitialized",
                  "nameLocation": "867:19:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "questionID",
                        "nameLocation": "903:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "887:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 103,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "921:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "915:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "886:49:1"
                  },
                  "src": "861:75:1"
                },
                {
                  "canonicalName": "SweepstakeUma.QuestionData",
                  "id": 118,
                  "members": [
                    {
                      "constant": false,
                      "id": 108,
                      "mutability": "mutable",
                      "name": "creator",
                      "nameLocation": "1022:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1015:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1015:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "marketID",
                      "nameLocation": "1089:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1082:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1082:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "ancillaryData",
                      "nameLocation": "1166:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1160:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1160:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 117,
                      "mutability": "mutable",
                      "name": "resolved",
                      "nameLocation": "1221:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1216:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 116,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1216:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "QuestionData",
                  "nameLocation": "949:12:1",
                  "nodeType": "StructDefinition",
                  "scope": 316,
                  "src": "942:294:1",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "requestTime",
                  "nameLocation": "1250:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "1242:23:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1264:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "95addb90",
                  "id": 126,
                  "mutability": "mutable",
                  "name": "questions",
                  "nameLocation": "1312:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "1272:49:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionData_$118_storage_$",
                    "typeString": "mapping(bytes32 => struct SweepstakeUma.QuestionData)"
                  },
                  "typeName": {
                    "id": 125,
                    "keyType": {
                      "id": 122,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1280:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1272:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionData_$118_storage_$",
                      "typeString": "mapping(bytes32 => struct SweepstakeUma.QuestionData)"
                    },
                    "valueType": {
                      "id": 124,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 123,
                        "name": "QuestionData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 118,
                        "src": "1291:12:1"
                      },
                      "referencedDeclaration": 118,
                      "src": "1291:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QuestionData_$118_storage_ptr",
                        "typeString": "struct SweepstakeUma.QuestionData"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6ad0690a",
                  "id": 128,
                  "mutability": "mutable",
                  "name": "liveness",
                  "nameLocation": "1343:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "1328:23:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "1372:30:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 131,
                            "name": "liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1382:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3330",
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1393:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "src": "1382:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "1382:13:1"
                      }
                    ]
                  },
                  "id": 136,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1369:2:1"
                  },
                  "returnParameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1372:0:1"
                  },
                  "scope": 316,
                  "src": "1358:44:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "1619:37:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 144,
                            "name": "liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1629:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 145,
                            "name": "_liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "1640:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1629:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 147,
                        "nodeType": "ExpressionStatement",
                        "src": "1629:20:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "1512:45:1",
                    "text": "@param _liveness: liveness of the request"
                  },
                  "functionSelector": "021eb009",
                  "id": 149,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 141,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 770,
                        "src": "1609:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1609:9:1"
                    }
                  ],
                  "name": "setLiveness",
                  "nameLocation": "1571:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "_liveness",
                        "nameLocation": "1591:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1583:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1582:19:1"
                  },
                  "returnParameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1619:0:1"
                  },
                  "scope": 316,
                  "src": "1562:94:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2156:841:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 161,
                            "name": "requestTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "2166:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 162,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2180:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2180:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2166:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 165,
                        "nodeType": "ExpressionStatement",
                        "src": "2166:29:1"
                      },
                      {
                        "assignments": [
                          168
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 168,
                            "mutability": "mutable",
                            "name": "bondCurrency",
                            "nameLocation": "2263:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 222,
                            "src": "2256:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 167,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 166,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 77,
                                "src": "2256:6:1"
                              },
                              "referencedDeclaration": 77,
                              "src": "2256:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 172,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "307839623441333032413534386337653331336332623734433436316462376238346433303734413834",
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2298:42:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x9b4A302A548c7e313c2b74C461db7b84d3074A84"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 169,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "2278:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2278:72:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2256:94:1"
                      },
                      {
                        "assignments": [
                          174
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 174,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "2368:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 222,
                            "src": "2360:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 173,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2360:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 176,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2377:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2360:18:1"
                      },
                      {
                        "assignments": [
                          178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 178,
                            "mutability": "mutable",
                            "name": "ancillaryData",
                            "nameLocation": "2473:13:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 222,
                            "src": "2460:26:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 177,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2460:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 183,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 181,
                              "name": "ancillaryString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "2495:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2489:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 179,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2489:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2489:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2460:51:1"
                      },
                      {
                        "expression": {
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 184,
                            "name": "questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2521:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 186,
                                "name": "ancillaryData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 178,
                                "src": "2544:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 185,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2534:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2534:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2521:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2521:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 191,
                              "name": "questionID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "2582:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 192,
                              "name": "creator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2594:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 193,
                              "name": "marketID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "2603:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "id": 194,
                              "name": "ancillaryData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2613:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2628:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 190,
                            "name": "_saveQuestion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "2568:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,string memory,string memory,bytes memory,bool)"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2568:66:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 197,
                        "nodeType": "ExpressionStatement",
                        "src": "2568:66:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 201,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "2730:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 202,
                              "name": "requestTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2754:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 203,
                              "name": "ancillaryData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2779:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 204,
                              "name": "bondCurrency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2806:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 205,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2832:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 198,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "2701:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                                "typeString": "contract IOptimisticOracleV2"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "requestPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 538,
                            "src": "2701:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_contract$_IERC20_$77_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (bytes32,uint256,bytes memory,contract IERC20,uint256) external returns (uint256)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2701:147:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "2701:147:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "2879:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "requestTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2891:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 213,
                              "name": "ancillaryData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2904:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 214,
                              "name": "liveness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 128,
                              "src": "2919:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 208,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "2858:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                                "typeString": "contract IOptimisticOracleV2"
                              }
                            },
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setCustomLiveness",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 574,
                            "src": "2858:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256,bytes memory,uint256) external"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2858:70:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 216,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:70:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 218,
                              "name": "questionID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 159,
                              "src": "2964:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 219,
                              "name": "ancillaryData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2976:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 217,
                            "name": "QuestionInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "2944:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,bytes memory)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2944:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "EmitStatement",
                        "src": "2939:51:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 150,
                    "nodeType": "StructuredDocumentation",
                    "src": "1717:263:1",
                    "text": "@param creator: address of creator in SUI\n @param marketID: marketID in sweepstake\n @param ancillaryString: the description of market\n ex: \"Q:Did the temperature on the 25th of July 2022 in Manhattan NY exceed 35c? A:1 for yes. 0 for no.\""
                  },
                  "functionSelector": "bdb9e4db",
                  "id": 223,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requestData",
                  "nameLocation": "1994:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "creator",
                        "nameLocation": "2031:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "2015:23:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2015:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "marketID",
                        "nameLocation": "2064:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "2048:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2048:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "ancillaryString",
                        "nameLocation": "2096:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "2082:29:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2082:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2005:112:1"
                  },
                  "returnParameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "questionID",
                        "nameLocation": "2144:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "2136:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2136:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2135:20:1"
                  },
                  "scope": 316,
                  "src": "1985:1012:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "3209:309:1",
                    "statements": [
                      {
                        "assignments": [
                          231
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 231,
                            "mutability": "mutable",
                            "name": "quest",
                            "nameLocation": "3239:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3219:25:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                              "typeString": "struct SweepstakeUma.QuestionData"
                            },
                            "typeName": {
                              "id": 230,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 229,
                                "name": "QuestionData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 118,
                                "src": "3219:12:1"
                              },
                              "referencedDeclaration": 118,
                              "src": "3219:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QuestionData_$118_storage_ptr",
                                "typeString": "struct SweepstakeUma.QuestionData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 235,
                        "initialValue": {
                          "baseExpression": {
                            "id": 232,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "3247:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionData_$118_storage_$",
                              "typeString": "mapping(bytes32 => struct SweepstakeUma.QuestionData storage ref)"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "3257:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3247:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionData_$118_storage",
                            "typeString": "struct SweepstakeUma.QuestionData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3219:49:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 241,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3296:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SweepstakeUma_$316",
                                    "typeString": "contract SweepstakeUma"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SweepstakeUma_$316",
                                    "typeString": "contract SweepstakeUma"
                                  }
                                ],
                                "id": 240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3288:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 239,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3288:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3288:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 243,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "3303:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 244,
                              "name": "requestTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "3315:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 245,
                                "name": "quest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "3328:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                                  "typeString": "struct SweepstakeUma.QuestionData memory"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ancillaryData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 114,
                              "src": "3328:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 236,
                              "name": "oo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "3278:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                                "typeString": "contract IOptimisticOracleV2"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "settle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 690,
                            "src": "3278:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (address,bytes32,uint256,bytes memory) external returns (uint256)"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3278:70:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "3278:70:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 250,
                              "name": "questionID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "3385:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 251,
                                "name": "quest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "3409:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                                  "typeString": "struct SweepstakeUma.QuestionData memory"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "creator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 108,
                              "src": "3409:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 253,
                                "name": "quest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "3436:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                                  "typeString": "struct SweepstakeUma.QuestionData memory"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "marketID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "3436:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 255,
                                "name": "quest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "3464:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                                  "typeString": "struct SweepstakeUma.QuestionData memory"
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ancillaryData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 114,
                              "src": "3464:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3497:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 249,
                            "name": "_saveQuestion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3358:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,string memory,string memory,bytes memory,bool)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3358:153:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "3358:153:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 224,
                    "nodeType": "StructuredDocumentation",
                    "src": "3109:45:1",
                    "text": "@param questionID: questionID of a market"
                  },
                  "functionSelector": "94c5d4fe",
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleRequest",
                  "nameLocation": "3168:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "questionID",
                        "nameLocation": "3190:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3182:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3182:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3181:20:1"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3209:0:1"
                  },
                  "scope": 316,
                  "src": "3159:359:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 289,
                    "nodeType": "Block",
                    "src": "3724:287:1",
                    "statements": [
                      {
                        "assignments": [
                          271
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 271,
                            "mutability": "mutable",
                            "name": "quest",
                            "nameLocation": "3754:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 289,
                            "src": "3734:25:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                              "typeString": "struct SweepstakeUma.QuestionData"
                            },
                            "typeName": {
                              "id": 270,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 269,
                                "name": "QuestionData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 118,
                                "src": "3734:12:1"
                              },
                              "referencedDeclaration": 118,
                              "src": "3734:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QuestionData_$118_storage_ptr",
                                "typeString": "struct SweepstakeUma.QuestionData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 275,
                        "initialValue": {
                          "baseExpression": {
                            "id": 272,
                            "name": "questions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "3762:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionData_$118_storage_$",
                              "typeString": "mapping(bytes32 => struct SweepstakeUma.QuestionData storage ref)"
                            }
                          },
                          "id": 274,
                          "indexExpression": {
                            "id": 273,
                            "name": "questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3772:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3762:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionData_$118_storage",
                            "typeString": "struct SweepstakeUma.QuestionData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3734:49:1"
                      },
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3864:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SweepstakeUma_$316",
                                      "typeString": "contract SweepstakeUma"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SweepstakeUma_$316",
                                      "typeString": "contract SweepstakeUma"
                                    }
                                  ],
                                  "id": 279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3856:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 278,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3856:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3856:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 282,
                                "name": "identifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "3887:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 283,
                                "name": "requestTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "3915:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 284,
                                  "name": "quest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 271,
                                  "src": "3944:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                                    "typeString": "struct SweepstakeUma.QuestionData memory"
                                  }
                                },
                                "id": 285,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ancillaryData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 114,
                                "src": "3944:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 276,
                                "name": "oo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "3812:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOptimisticOracleV2_$744",
                                  "typeString": "contract IOptimisticOracleV2"
                                }
                              },
                              "id": 277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 705,
                              "src": "3812:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_Request_$497_memory_ptr_$",
                                "typeString": "function (address,bytes32,uint256,bytes memory) view external returns (struct IOptimisticOracleV2.Request memory)"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3812:165:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$497_memory_ptr",
                              "typeString": "struct IOptimisticOracleV2.Request memory"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "resolvedPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 490,
                          "src": "3812:192:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 268,
                        "id": 288,
                        "nodeType": "Return",
                        "src": "3793:211:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:45:1",
                    "text": "@param questionID: questionID of a market"
                  },
                  "functionSelector": "20147a0b",
                  "id": 290,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSettledData",
                  "nameLocation": "3660:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "questionID",
                        "nameLocation": "3683:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "3675:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3675:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3674:20:1"
                  },
                  "returnParameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "3716:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3716:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3715:8:1"
                  },
                  "scope": 316,
                  "src": "3651:360:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "4205:201:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 303,
                              "name": "questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 126,
                              "src": "4215:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_QuestionData_$118_storage_$",
                                "typeString": "mapping(bytes32 => struct SweepstakeUma.QuestionData storage ref)"
                              }
                            },
                            "id": 305,
                            "indexExpression": {
                              "id": 304,
                              "name": "questionID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4225:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4215:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_QuestionData_$118_storage",
                              "typeString": "struct SweepstakeUma.QuestionData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 307,
                                "name": "creator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 294,
                                "src": "4275:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 308,
                                "name": "marketID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "4306:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 309,
                                "name": "ancillaryData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 298,
                                "src": "4343:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 310,
                                "name": "resolved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 300,
                                "src": "4380:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 306,
                              "name": "QuestionData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "4239:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_QuestionData_$118_storage_ptr_$",
                                "typeString": "type(struct SweepstakeUma.QuestionData storage pointer)"
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "creator",
                              "marketID",
                              "ancillaryData",
                              "resolved"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4239:160:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_QuestionData_$118_memory_ptr",
                              "typeString": "struct SweepstakeUma.QuestionData memory"
                            }
                          },
                          "src": "4215:184:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QuestionData_$118_storage",
                            "typeString": "struct SweepstakeUma.QuestionData storage ref"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "4215:184:1"
                      }
                    ]
                  },
                  "id": 315,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_saveQuestion",
                  "nameLocation": "4026:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "questionID",
                        "nameLocation": "4057:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "4049:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4049:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "creator",
                        "nameLocation": "4091:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "4077:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4077:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "marketID",
                        "nameLocation": "4122:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "4108:22:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4108:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "4153:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "4140:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4140:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 300,
                        "mutability": "mutable",
                        "name": "resolved",
                        "nameLocation": "4181:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "4176:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4176:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4039:156:1"
                  },
                  "returnParameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4205:0:1"
                  },
                  "scope": 316,
                  "src": "4017:389:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 317,
              "src": "243:4165:1",
              "usedErrors": [
                320
              ]
            }
          ],
          "src": "32:4377:1"
        },
        "id": 1
      },
      "contracts/interfaces/IAuth.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAuth.sol",
          "exportedSymbols": {
            "IAuth": [
              358
            ],
            "IAuthEE": [
              335
            ]
          },
          "id": 359,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 318,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAuthEE",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 335,
              "linearizedBaseContracts": [
                335
              ],
              "name": "IAuthEE",
              "nameLocation": "67:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "errorSelector": "7bfa4b9f",
                  "id": 320,
                  "name": "NotAdmin",
                  "nameLocation": "87:8:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "95:2:2"
                  },
                  "src": "81:17:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "104:45:2",
                    "text": "@notice Emitted when a new admin is added"
                  },
                  "eventSelector": "f9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc",
                  "id": 327,
                  "name": "NewAdmin",
                  "nameLocation": "160:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "185:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "169:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "169:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminAddress",
                        "nameLocation": "208:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "192:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "168:56:2"
                  },
                  "src": "154:71:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 328,
                    "nodeType": "StructuredDocumentation",
                    "src": "231:44:2",
                    "text": "@notice Emitted when an admin is removed"
                  },
                  "eventSelector": "787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e",
                  "id": 334,
                  "name": "RemovedAdmin",
                  "nameLocation": "286:12:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "315:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "299:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "299:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "removedAdmin",
                        "nameLocation": "338:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "322:28:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "322:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "298:53:2"
                  },
                  "src": "280:72:2"
                }
              ],
              "scope": 359,
              "src": "57:297:2",
              "usedErrors": [
                320
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 336,
                    "name": "IAuthEE",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 335,
                    "src": "375:7:2"
                  },
                  "id": 337,
                  "nodeType": "InheritanceSpecifier",
                  "src": "375:7:2"
                }
              ],
              "canonicalName": "IAuth",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 358,
              "linearizedBaseContracts": [
                358,
                335
              ],
              "name": "IAuth",
              "nameLocation": "366:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "24d7806c",
                  "id": 344,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAdmin",
                  "nameLocation": "398:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "406:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:9:2"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 344,
                        "src": "438:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "438:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "437:6:2"
                  },
                  "scope": 358,
                  "src": "389:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70480275",
                  "id": 349,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addAdmin",
                  "nameLocation": "459:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "468:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "468:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "467:9:2"
                  },
                  "returnParameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "485:0:2"
                  },
                  "scope": 358,
                  "src": "450:36:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1785f53c",
                  "id": 354,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeAdmin",
                  "nameLocation": "501:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "513:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "513:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "512:9:2"
                  },
                  "returnParameters": {
                    "id": 353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "530:0:2"
                  },
                  "scope": 358,
                  "src": "492:39:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8bad0c0a",
                  "id": 357,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceAdmin",
                  "nameLocation": "546:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "559:2:2"
                  },
                  "returnParameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "570:0:2"
                  },
                  "scope": 358,
                  "src": "537:34:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 359,
              "src": "356:217:2",
              "usedErrors": [
                320
              ]
            }
          ],
          "src": "32:542:2"
        },
        "id": 2
      },
      "contracts/interfaces/IFinder.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IFinder.sol",
          "exportedSymbols": {
            "IFinder": [
              378
            ]
          },
          "id": 379,
          "license": "AGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 360,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFinder",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 361,
                "nodeType": "StructuredDocumentation",
                "src": "67:144:3",
                "text": " @title Provides addresses of the live contracts implementing certain interfaces.\n @dev Examples are the Oracle or Store interfaces."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IFinder",
              "nameLocation": "222:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "236:300:3",
                    "text": " @notice Updates the address of the contract that implements `interfaceName`.\n @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n @param implementationAddress address of the deployed contract that implements the interface."
                  },
                  "functionSelector": "31f9665e",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeImplementationAddress",
                  "nameLocation": "550:27:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "interfaceName",
                        "nameLocation": "586:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "578:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "578:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "implementationAddress",
                        "nameLocation": "609:21:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "601:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "601:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "577:54:3"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "640:0:3"
                  },
                  "scope": 378,
                  "src": "541:100:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "647:250:3",
                    "text": " @notice Gets the address of the contract that implements the given `interfaceName`.\n @param interfaceName queried interface.\n @return implementationAddress address of the deployed contract that implements the interface."
                  },
                  "functionSelector": "aafd5e40",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getImplementationAddress",
                  "nameLocation": "911:24:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "interfaceName",
                        "nameLocation": "944:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "936:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "936:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "935:23:3"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "982:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "982:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "981:9:3"
                  },
                  "scope": 378,
                  "src": "902:89:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "212:781:3",
              "usedErrors": []
            }
          ],
          "src": "42:952:3"
        },
        "id": 3
      },
      "contracts/interfaces/IOptimisticOracleV2.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IOptimisticOracleV2.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ],
            "IFinder": [
              378
            ],
            "IOptimisticOracleV2": [
              744
            ]
          },
          "id": 745,
          "license": "AGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 381,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 745,
              "sourceUnit": 78,
              "src": "67:56:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFinder.sol",
              "file": "./IFinder.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 745,
              "sourceUnit": 379,
              "src": "124:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "IOptimisticOracleV2",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 383,
                "nodeType": "StructuredDocumentation",
                "src": "149:175:4",
                "text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
              },
              "fullyImplemented": false,
              "id": 744,
              "linearizedBaseContracts": [
                744
              ],
              "name": "IOptimisticOracleV2",
              "nameLocation": "343:19:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "f1679315ff325c257a944e0ca1bfe7b26616039e9511f9610d4ba3eca851027b",
                  "id": 399,
                  "name": "RequestPrice",
                  "nameLocation": "375:12:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "413:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "397:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "397:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 387,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "440:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "432:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "432:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 389,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "468:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "460:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 391,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "493:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "487:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "487:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "currency",
                        "nameLocation": "524:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "516:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "516:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 395,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nameLocation": "550:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "542:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "finalFee",
                        "nameLocation": "574:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 399,
                        "src": "566:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "566:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:201:4"
                  },
                  "src": "369:220:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6e51dd00371aabffa82cd401592f76ed51e98a9ea4b58751c70463a2c78b5ca1",
                  "id": 417,
                  "name": "ProposePrice",
                  "nameLocation": "600:12:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "638:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "622:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "622:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 403,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposer",
                        "nameLocation": "673:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "657:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "699:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "691:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "727:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "719:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "719:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 409,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "752:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "746:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "746:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 411,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposedPrice",
                        "nameLocation": "782:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "775:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "775:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 413,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "expirationTimestamp",
                        "nameLocation": "813:19:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "805:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "currency",
                        "nameLocation": "850:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "842:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "842:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "612:252:4"
                  },
                  "src": "594:271:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5165909c3d1c01c5d1e121ac6f6d01dda1ba24bc9e1f975b5a375339c15be7f3",
                  "id": 433,
                  "name": "DisputePrice",
                  "nameLocation": "876:12:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "914:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "898:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "898:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposer",
                        "nameLocation": "949:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "933:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "disputer",
                        "nameLocation": "983:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "967:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "1009:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "1001:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1001:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 427,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1037:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "1029:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 429,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "1062:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "1056:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposedPrice",
                        "nameLocation": "1092:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "1085:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1085:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:223:4"
                  },
                  "src": "870:242:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3f384afb4bd9f0aef0298c80399950011420eb33b0e1a750b20966270247b9a0",
                  "id": 451,
                  "name": "Settle",
                  "nameLocation": "1123:6:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "1155:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1139:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 437,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "proposer",
                        "nameLocation": "1190:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1174:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1174:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 439,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "disputer",
                        "nameLocation": "1224:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1208:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1208:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 441,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "1250:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1242:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1242:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 443,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1278:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1270:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1270:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 445,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "1303:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1297:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1297:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "1333:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1326:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 449,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "payout",
                        "nameLocation": "1356:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 451,
                        "src": "1348:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1348:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:239:4"
                  },
                  "src": "1117:252:4"
                },
                {
                  "canonicalName": "IOptimisticOracleV2.State",
                  "id": 459,
                  "members": [
                    {
                      "id": 452,
                      "name": "Invalid",
                      "nameLocation": "1452:7:4",
                      "nodeType": "EnumValue",
                      "src": "1452:7:4"
                    },
                    {
                      "id": 453,
                      "name": "Requested",
                      "nameLocation": "1489:9:4",
                      "nodeType": "EnumValue",
                      "src": "1489:9:4"
                    },
                    {
                      "id": 454,
                      "name": "Proposed",
                      "nameLocation": "1546:8:4",
                      "nodeType": "EnumValue",
                      "src": "1546:8:4"
                    },
                    {
                      "id": 455,
                      "name": "Expired",
                      "nameLocation": "1610:7:4",
                      "nodeType": "EnumValue",
                      "src": "1610:7:4"
                    },
                    {
                      "id": 456,
                      "name": "Disputed",
                      "nameLocation": "1669:8:4",
                      "nodeType": "EnumValue",
                      "src": "1669:8:4"
                    },
                    {
                      "id": 457,
                      "name": "Resolved",
                      "nameLocation": "1731:8:4",
                      "nodeType": "EnumValue",
                      "src": "1731:8:4"
                    },
                    {
                      "id": 458,
                      "name": "Settled",
                      "nameLocation": "1789:7:4",
                      "nodeType": "EnumValue",
                      "src": "1789:7:4"
                    }
                  ],
                  "name": "State",
                  "nameLocation": "1436:5:4",
                  "nodeType": "EnumDefinition",
                  "src": "1431:456:4"
                },
                {
                  "canonicalName": "IOptimisticOracleV2.RequestSettings",
                  "id": 474,
                  "members": [
                    {
                      "constant": false,
                      "id": 461,
                      "mutability": "mutable",
                      "name": "eventBased",
                      "nameLocation": "1931:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "1926:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1926:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 463,
                      "mutability": "mutable",
                      "name": "refundOnDispute",
                      "nameLocation": "2005:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "2000:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 462,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2000:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "callbackOnPriceProposed",
                      "nameLocation": "2104:23:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "2099:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2099:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "callbackOnPriceDisputed",
                      "nameLocation": "2199:23:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "2194:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 466,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2194:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "callbackOnPriceSettled",
                      "nameLocation": "2294:22:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "2289:27:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 471,
                      "mutability": "mutable",
                      "name": "bond",
                      "nameLocation": "2390:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "2382:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2382:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "customLiveness",
                      "nameLocation": "2485:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "2477:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RequestSettings",
                  "nameLocation": "1900:15:4",
                  "nodeType": "StructDefinition",
                  "scope": 744,
                  "src": "1893:660:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IOptimisticOracleV2.Request",
                  "id": 497,
                  "members": [
                    {
                      "constant": false,
                      "id": 476,
                      "mutability": "mutable",
                      "name": "proposer",
                      "nameLocation": "2636:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2628:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2628:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 478,
                      "mutability": "mutable",
                      "name": "disputer",
                      "nameLocation": "2690:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2682:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2682:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "2743:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2736:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$77",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 480,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 479,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 77,
                          "src": "2736:6:4"
                        },
                        "referencedDeclaration": 77,
                        "src": "2736:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 483,
                      "mutability": "mutable",
                      "name": "settled",
                      "nameLocation": "2811:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2806:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2806:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 486,
                      "mutability": "mutable",
                      "name": "requestSettings",
                      "nameLocation": "2879:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2863:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RequestSettings_$474_storage_ptr",
                        "typeString": "struct IOptimisticOracleV2.RequestSettings"
                      },
                      "typeName": {
                        "id": 485,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 484,
                          "name": "RequestSettings",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 474,
                          "src": "2863:15:4"
                        },
                        "referencedDeclaration": 474,
                        "src": "2863:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RequestSettings_$474_storage_ptr",
                          "typeString": "struct IOptimisticOracleV2.RequestSettings"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "proposedPrice",
                      "nameLocation": "2957:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "2950:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "resolvedPrice",
                      "nameLocation": "3025:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "3018:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 489,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3018:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 492,
                      "mutability": "mutable",
                      "name": "expirationTime",
                      "nameLocation": "3103:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "3095:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3095:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 494,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "3196:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "3188:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 493,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3188:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 496,
                      "mutability": "mutable",
                      "name": "finalFee",
                      "nameLocation": "3284:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 497,
                      "src": "3276:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3276:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Request",
                  "nameLocation": "2610:7:4",
                  "nodeType": "StructDefinition",
                  "scope": 744,
                  "src": "2603:754:4",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c371dda7",
                  "id": 500,
                  "mutability": "constant",
                  "name": "ancillaryBytesLimit",
                  "nameLocation": "3692:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "3668:50:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3668:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "38313932",
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3714:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8192_by_1",
                      "typeString": "int_const 8192"
                    },
                    "value": "8192"
                  },
                  "visibility": "public"
                },
                {
                  "functionSelector": "fe4e1983",
                  "id": 505,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultLiveness",
                  "nameLocation": "3734:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3749:2:4"
                  },
                  "returnParameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "3783:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3783:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3782:9:4"
                  },
                  "scope": 744,
                  "src": "3725:67:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b9a3c84c",
                  "id": 511,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "finder",
                  "nameLocation": "3807:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3813:2:4"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "3847:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFinder_$378",
                          "typeString": "contract IFinder"
                        },
                        "typeName": {
                          "id": 508,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 507,
                            "name": "IFinder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "3847:7:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "3847:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFinder_$378",
                            "typeString": "contract IFinder"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3846:9:4"
                  },
                  "scope": 744,
                  "src": "3798:58:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "functionSelector": "29cb924d",
                  "id": 516,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentTime",
                  "nameLocation": "3871:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3885:2:4"
                  },
                  "returnParameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "3919:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:9:4"
                  },
                  "scope": 744,
                  "src": "3862:66:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "constant": false,
                  "functionSelector": "9d866985",
                  "id": 521,
                  "mutability": "mutable",
                  "name": "requests",
                  "nameLocation": "4061:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 744,
                  "src": "4026:43:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$497_storage_$",
                    "typeString": "mapping(bytes32 => struct IOptimisticOracleV2.Request)"
                  },
                  "typeName": {
                    "id": 520,
                    "keyType": {
                      "id": 517,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4034:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4026:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$497_storage_$",
                      "typeString": "mapping(bytes32 => struct IOptimisticOracleV2.Request)"
                    },
                    "valueType": {
                      "id": 519,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 518,
                        "name": "Request",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 497,
                        "src": "4045:7:4"
                      },
                      "referencedDeclaration": 497,
                      "src": "4045:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$497_storage_ptr",
                        "typeString": "struct IOptimisticOracleV2.Request"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 522,
                    "nodeType": "StructuredDocumentation",
                    "src": "4076:854:4",
                    "text": " @notice Requests a new price.\n @param identifier price identifier being requested.\n @param timestamp timestamp of the price being requested.\n @param ancillaryData ancillary data representing additional args being passed with the price request.\n @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n               which could make sense if the contract requests and proposes the value in the same call or\n               provides its own reward system.\n @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n This can be changed with a subsequent call to setBond()."
                  },
                  "functionSelector": "11df92f1",
                  "id": 538,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requestPrice",
                  "nameLocation": "4944:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "4974:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "4966:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4966:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 526,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "5002:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "4994:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 525,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4994:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "5034:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "5021:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5021:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "currency",
                        "nameLocation": "5064:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "5057:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 529,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 77,
                            "src": "5057:6:4"
                          },
                          "referencedDeclaration": 77,
                          "src": "5057:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 533,
                        "mutability": "mutable",
                        "name": "reward",
                        "nameLocation": "5090:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "5082:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 532,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5082:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4956:146:4"
                  },
                  "returnParameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "totalBond",
                        "nameLocation": "5137:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "5129:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5129:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5128:19:4"
                  },
                  "scope": 744,
                  "src": "4935:213:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 539,
                    "nodeType": "StructuredDocumentation",
                    "src": "5154:516:4",
                    "text": " @notice Set the proposal bond associated with a price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param bond custom bond amount to set.\n @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n changed again with a subsequent call to setBond()."
                  },
                  "functionSelector": "ad5a755a",
                  "id": 552,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setBond",
                  "nameLocation": "5684:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "5709:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "5701:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5701:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "5737:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "5729:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5729:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "5769:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "5756:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5756:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "bond",
                        "nameLocation": "5800:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "5792:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5792:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5691:119:4"
                  },
                  "returnParameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "totalBond",
                        "nameLocation": "5845:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "5837:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5837:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5836:19:4"
                  },
                  "scope": 744,
                  "src": "5675:181:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 553,
                    "nodeType": "StructuredDocumentation",
                    "src": "5862:545:4",
                    "text": " @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n bond, so there is still profit to be made even if the reward is refunded.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."
                  },
                  "functionSelector": "91f58dcb",
                  "id": 562,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRefundOnDispute",
                  "nameLocation": "6421:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "6457:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "6449:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6449:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "6485:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "6477:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6477:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 559,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "6517:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "6504:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6504:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6439:97:4"
                  },
                  "returnParameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6553:0:4"
                  },
                  "scope": 744,
                  "src": "6412:142:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "6560:426:4",
                    "text": " @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n being auto-resolved.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param customLiveness new custom liveness."
                  },
                  "functionSelector": "473c45fe",
                  "id": 574,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCustomLiveness",
                  "nameLocation": "7000:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "7035:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "7027:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7027:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "7063:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "7055:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7055:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "7095:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "7082:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7082:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "customLiveness",
                        "nameLocation": "7126:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "7118:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7118:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7017:129:4"
                  },
                  "returnParameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7163:0:4"
                  },
                  "scope": 744,
                  "src": "6991:173:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 575,
                    "nodeType": "StructuredDocumentation",
                    "src": "7170:862:4",
                    "text": " @notice Sets the request to be an \"event-based\" request.\n @dev Calling this method has a few impacts on the request:\n 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated\n    with the request.\n 2. The proposer cannot propose the \"too early\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who\n    prematurely proposes a response loses their bond.\n 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to\n    the requesting contract.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."
                  },
                  "functionSelector": "120698af",
                  "id": 584,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setEventBased",
                  "nameLocation": "8046:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "8077:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "8069:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8069:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "8105:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "8097:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8097:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 581,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "8137:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "8124:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 580,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8124:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8059:97:4"
                  },
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8173:0:4"
                  },
                  "scope": 744,
                  "src": "8037:137:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 585,
                    "nodeType": "StructuredDocumentation",
                    "src": "8180:555:4",
                    "text": " @notice Sets which callbacks should be enabled for the request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param callbackOnPriceProposed whether to enable the callback onPriceProposed.\n @param callbackOnPriceDisputed whether to enable the callback onPriceDisputed.\n @param callbackOnPriceSettled whether to enable the callback onPriceSettled."
                  },
                  "functionSelector": "f327b075",
                  "id": 600,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCallbacks",
                  "nameLocation": "8749:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "8779:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "8771:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8771:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "8807:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "8799:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8799:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "8839:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "8826:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8826:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "callbackOnPriceProposed",
                        "nameLocation": "8867:23:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "8862:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8862:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "callbackOnPriceDisputed",
                        "nameLocation": "8905:23:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "8900:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8900:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "callbackOnPriceSettled",
                        "nameLocation": "8943:22:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "8938:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8938:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8761:210:4"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8988:0:4"
                  },
                  "scope": 744,
                  "src": "8740:249:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 601,
                    "nodeType": "StructuredDocumentation",
                    "src": "8995:764:4",
                    "text": " @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n from this proposal. However, any bonds are pulled from the caller.\n @param proposer address to set as the proposer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."
                  },
                  "functionSelector": "7c82288f",
                  "id": 618,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposePriceFor",
                  "nameLocation": "9773:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "proposer",
                        "nameLocation": "9806:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9798:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9798:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "9832:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9824:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9824:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "9859:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9851:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9851:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "9887:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9879:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9879:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "9919:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9906:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9906:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "proposedPrice",
                        "nameLocation": "9949:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9942:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9942:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9788:180:4"
                  },
                  "returnParameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "totalBond",
                        "nameLocation": "10001:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "9993:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9993:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9992:19:4"
                  },
                  "scope": 744,
                  "src": "9764:248:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 619,
                    "nodeType": "StructuredDocumentation",
                    "src": "10018:586:4",
                    "text": " @notice Proposes a price value for an existing price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."
                  },
                  "functionSelector": "b8b4f908",
                  "id": 634,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposePrice",
                  "nameLocation": "10618:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "10648:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "10640:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10640:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "10675:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "10667:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10667:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "10703:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "10695:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10695:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "10735:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "10722:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10722:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "proposedPrice",
                        "nameLocation": "10765:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "10758:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10758:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10630:154:4"
                  },
                  "returnParameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "totalBond",
                        "nameLocation": "10819:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "10811:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10811:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10810:19:4"
                  },
                  "scope": 744,
                  "src": "10609:221:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 635,
                    "nodeType": "StructuredDocumentation",
                    "src": "10836:766:4",
                    "text": " @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n @param disputer address to set as the disputer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was value (the proposal was incorrect)."
                  },
                  "functionSelector": "76c7823f",
                  "id": 650,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disputePriceFor",
                  "nameLocation": "11616:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 637,
                        "mutability": "mutable",
                        "name": "disputer",
                        "nameLocation": "11649:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "11641:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11641:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "11675:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "11667:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11667:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "11702:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "11694:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11694:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "11730:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "11722:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11722:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "11762:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "11749:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "11749:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11631:150:4"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "totalBond",
                        "nameLocation": "11814:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "11806:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11806:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11805:19:4"
                  },
                  "scope": 744,
                  "src": "11607:218:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 651,
                    "nodeType": "StructuredDocumentation",
                    "src": "11831:587:4",
                    "text": " @notice Disputes a price value for an existing price request with an active proposal.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was valid (the proposal was incorrect)."
                  },
                  "functionSelector": "fba7f1e3",
                  "id": 664,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disputePrice",
                  "nameLocation": "12432:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "12462:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "12454:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12454:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "12489:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "12481:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12481:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "12517:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "12509:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12509:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "12549:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "12536:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12536:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12444:124:4"
                  },
                  "returnParameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "totalBond",
                        "nameLocation": "12603:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 664,
                        "src": "12595:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12595:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12594:19:4"
                  },
                  "scope": 744,
                  "src": "12423:191:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 665,
                    "nodeType": "StructuredDocumentation",
                    "src": "12620:515:4",
                    "text": " @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n or settleable. Note: this method is not view so that this call may actually settle the price request if it\n hasn't been settled.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return resolved price."
                  },
                  "functionSelector": "53b59239",
                  "id": 676,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleAndGetPrice",
                  "nameLocation": "13149:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 667,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "13184:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "13176:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13176:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "13212:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "13204:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13204:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "13244:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "13231:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13231:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13166:97:4"
                  },
                  "returnParameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "13290:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13290:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13289:8:4"
                  },
                  "scope": 744,
                  "src": "13140:158:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 677,
                    "nodeType": "StructuredDocumentation",
                    "src": "13304:565:4",
                    "text": " @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n the returned bonds as well as additional rewards."
                  },
                  "functionSelector": "5e9a79a9",
                  "id": 690,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settle",
                  "nameLocation": "13883:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 686,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "13907:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "13899:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13899:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "13934:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "13926:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "13962:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "13954:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13954:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "13994:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "13981:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13981:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13889:124:4"
                  },
                  "returnParameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "payout",
                        "nameLocation": "14048:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "14040:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14040:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14039:16:4"
                  },
                  "scope": 744,
                  "src": "13874:182:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "14062:429:4",
                    "text": " @notice Gets the current data structure containing all information about a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the Request data structure."
                  },
                  "functionSelector": "a9904f9b",
                  "id": 705,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRequest",
                  "nameLocation": "14505:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "14533:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "14525:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14525:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "14560:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "14552:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14552:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "14588:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "14580:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14580:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "14620:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "14607:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14607:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14515:124:4"
                  },
                  "returnParameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "14669:14:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$497_memory_ptr",
                          "typeString": "struct IOptimisticOracleV2.Request"
                        },
                        "typeName": {
                          "id": 702,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 701,
                            "name": "Request",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 497,
                            "src": "14669:7:4"
                          },
                          "referencedDeclaration": 497,
                          "src": "14669:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$497_storage_ptr",
                            "typeString": "struct IOptimisticOracleV2.Request"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14668:16:4"
                  },
                  "scope": 744,
                  "src": "14496:189:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 706,
                    "nodeType": "StructuredDocumentation",
                    "src": "14691:379:4",
                    "text": " @notice Returns the state of a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the State enum value."
                  },
                  "functionSelector": "ba4b930c",
                  "id": 720,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getState",
                  "nameLocation": "15084:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 708,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "15110:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "15102:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15102:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "15137:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "15129:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15129:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 712,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "15165:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "15157:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 711,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15157:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "15197:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "15184:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "15184:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15092:124:4"
                  },
                  "returnParameters": {
                    "id": 719,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "15246:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$459",
                          "typeString": "enum IOptimisticOracleV2.State"
                        },
                        "typeName": {
                          "id": 717,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 716,
                            "name": "State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 459,
                            "src": "15246:5:4"
                          },
                          "referencedDeclaration": 459,
                          "src": "15246:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$459",
                            "typeString": "enum IOptimisticOracleV2.State"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15245:7:4"
                  },
                  "scope": 744,
                  "src": "15075:178:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 721,
                    "nodeType": "StructuredDocumentation",
                    "src": "15259:471:4",
                    "text": " @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return true if price has resolved or settled, false otherwise."
                  },
                  "functionSelector": "bc58ccaa",
                  "id": 734,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasPrice",
                  "nameLocation": "15744:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "15770:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "15762:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15762:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 725,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "15797:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "15789:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15789:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 727,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "15825:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "15817:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15817:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 729,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "15857:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "15844:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "15844:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15752:124:4"
                  },
                  "returnParameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 734,
                        "src": "15906:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15906:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15905:6:4"
                  },
                  "scope": 744,
                  "src": "15735:177:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "functionSelector": "af5d2f39",
                  "id": 743,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stampAncillaryData",
                  "nameLocation": "15927:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 739,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "ancillaryData",
                        "nameLocation": "15959:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "15946:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "15946:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 738,
                        "mutability": "mutable",
                        "name": "requester",
                        "nameLocation": "15982:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "15974:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15974:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15945:47:4"
                  },
                  "returnParameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "16038:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "16038:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16037:14:4"
                  },
                  "scope": 744,
                  "src": "15918:134:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 745,
              "src": "325:15729:4",
              "usedErrors": []
            }
          ],
          "src": "42:16012:4"
        },
        "id": 4
      },
      "contracts/mixins/Auth.sol": {
        "ast": {
          "absolutePath": "contracts/mixins/Auth.sol",
          "exportedSymbols": {
            "Auth": [
              860
            ],
            "IAuth": [
              358
            ]
          },
          "id": 861,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 746,
              "literals": [
                "solidity",
                "0.8",
                ".15"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:5"
            },
            {
              "absolutePath": "contracts/interfaces/IAuth.sol",
              "file": "../interfaces/IAuth.sol",
              "id": 748,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 861,
              "sourceUnit": 359,
              "src": "57:48:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 747,
                    "name": "IAuth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 358,
                    "src": "66:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 750,
                    "name": "IAuth",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 358,
                    "src": "195:5:5"
                  },
                  "id": 751,
                  "nodeType": "InheritanceSpecifier",
                  "src": "195:5:5"
                }
              ],
              "canonicalName": "Auth",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 749,
                "nodeType": "StructuredDocumentation",
                "src": "107:62:5",
                "text": "@title Auth\n @notice Provides access control modifiers"
              },
              "fullyImplemented": true,
              "id": 860,
              "linearizedBaseContracts": [
                860,
                358,
                335
              ],
              "name": "Auth",
              "nameLocation": "187:4:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 752,
                    "nodeType": "StructuredDocumentation",
                    "src": "207:16:5",
                    "text": "@notice Auth"
                  },
                  "functionSelector": "429b62e5",
                  "id": 756,
                  "mutability": "mutable",
                  "name": "admins",
                  "nameLocation": "263:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "228:41:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 755,
                    "keyType": {
                      "id": 753,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "236:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "228:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 754,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "247:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 769,
                    "nodeType": "Block",
                    "src": "297:74:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 758,
                              "name": "admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "311:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 761,
                            "indexExpression": {
                              "expression": {
                                "id": 759,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "318:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "318:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "311:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "333:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "311:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 767,
                        "nodeType": "IfStatement",
                        "src": "307:46:5",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 764,
                              "name": "NotAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "343:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "343:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 766,
                          "nodeType": "RevertStatement",
                          "src": "336:17:5"
                        }
                      },
                      {
                        "id": 768,
                        "nodeType": "PlaceholderStatement",
                        "src": "363:1:5"
                      }
                    ]
                  },
                  "id": 770,
                  "name": "onlyAdmin",
                  "nameLocation": "285:9:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "294:2:5"
                  },
                  "src": "276:95:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "391:39:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 773,
                              "name": "admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "401:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 776,
                            "indexExpression": {
                              "expression": {
                                "id": 774,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "408:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "408:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "401:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "422:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "401:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "401:22:5"
                      }
                    ]
                  },
                  "id": 781,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "388:2:5"
                  },
                  "returnParameters": {
                    "id": 772,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:0:5"
                  },
                  "scope": 860,
                  "src": "377:53:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    349
                  ],
                  "body": {
                    "id": 801,
                    "nodeType": "Block",
                    "src": "566:76:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 789,
                              "name": "admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "576:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 791,
                            "indexExpression": {
                              "id": 790,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "583:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "576:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "592:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "576:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 794,
                        "nodeType": "ExpressionStatement",
                        "src": "576:17:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 796,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "617:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "617:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 798,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "629:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 795,
                            "name": "NewAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "608:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "608:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 800,
                        "nodeType": "EmitStatement",
                        "src": "603:32:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 782,
                    "nodeType": "StructuredDocumentation",
                    "src": "436:73:5",
                    "text": "@notice Adds an Admin\n @param admin - The address of the admin"
                  },
                  "functionSelector": "70480275",
                  "id": 802,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 787,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 786,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 770,
                        "src": "556:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "556:9:5"
                    }
                  ],
                  "name": "addAdmin",
                  "nameLocation": "523:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "540:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "532:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "532:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "531:15:5"
                  },
                  "returnParameters": {
                    "id": 788,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "566:0:5"
                  },
                  "scope": 860,
                  "src": "514:128:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    354
                  ],
                  "body": {
                    "id": 822,
                    "nodeType": "Block",
                    "src": "798:80:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 810,
                              "name": "admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "808:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 812,
                            "indexExpression": {
                              "id": 811,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "815:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "808:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "824:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "808:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 815,
                        "nodeType": "ExpressionStatement",
                        "src": "808:17:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 817,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "853:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "853:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 819,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "865:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 816,
                            "name": "RemovedAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "840:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "840:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 821,
                        "nodeType": "EmitStatement",
                        "src": "835:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "648:90:5",
                    "text": "@notice Removes an admin\n @param admin - The address of the admin to be removed"
                  },
                  "functionSelector": "1785f53c",
                  "id": 823,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 808,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 807,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 770,
                        "src": "788:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "788:9:5"
                    }
                  ],
                  "name": "removeAdmin",
                  "nameLocation": "752:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 806,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "772:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 823,
                        "src": "764:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "764:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "763:15:5"
                  },
                  "returnParameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "798:0:5"
                  },
                  "scope": 860,
                  "src": "743:135:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    357
                  ],
                  "body": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "987:90:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 829,
                              "name": "admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "997:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 832,
                            "indexExpression": {
                              "expression": {
                                "id": 830,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1004:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1004:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "997:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1018:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "997:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 835,
                        "nodeType": "ExpressionStatement",
                        "src": "997:22:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 837,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1047:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1047:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 839,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1059:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1059:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 836,
                            "name": "RemovedAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "1034:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1034:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 842,
                        "nodeType": "EmitStatement",
                        "src": "1029:41:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 824,
                    "nodeType": "StructuredDocumentation",
                    "src": "884:54:5",
                    "text": "@notice Renounces Admin privileges from the caller"
                  },
                  "functionSelector": "8bad0c0a",
                  "id": 844,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 827,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 826,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 770,
                        "src": "977:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "977:9:5"
                    }
                  ],
                  "name": "renounceAdmin",
                  "nameLocation": "952:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "965:2:5"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "987:0:5"
                  },
                  "scope": 860,
                  "src": "943:134:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    344
                  ],
                  "body": {
                    "id": 858,
                    "nodeType": "Block",
                    "src": "1240:41:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 852,
                              "name": "admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "1257:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 854,
                            "indexExpression": {
                              "id": 853,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "1264:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1257:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1273:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1257:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 851,
                        "id": 857,
                        "nodeType": "Return",
                        "src": "1250:24:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1083:92:5",
                    "text": "@notice Checks if an address is an admin\n @param addr - The address to be checked"
                  },
                  "functionSelector": "24d7806c",
                  "id": 859,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAdmin",
                  "nameLocation": "1189:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "1205:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 859,
                        "src": "1197:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1197:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1196:14:5"
                  },
                  "returnParameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 859,
                        "src": "1234:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1233:6:5"
                  },
                  "scope": 860,
                  "src": "1180:101:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 861,
              "src": "169:1114:5",
              "usedErrors": [
                320
              ]
            }
          ],
          "src": "32:1252:5"
        },
        "id": 5
      }
    },
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9a7c516237b09d07d74d015fd2fdf15f601f807fbeb99374a5d3083d1feaab86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d461d762d4f6a77ad33663ae0125ba9b73558b82c85a8e30e19b2c6ddc0d805c\",\"dweb:/ipfs/QmULfo1kCzU9tjyv4t6GHdctCNYAx53zWLzpf6UVvyaXad\"]}},\"version\":1}"
        }
      },
      "contracts/SweepstakeUma.sol": {
        "SweepstakeUma": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "NotAdmin",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newAdminAddress",
                  "type": "address"
                }
              ],
              "name": "NewAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "questionID",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "QuestionInitialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "removedAdmin",
                  "type": "address"
                }
              ],
              "name": "RemovedAdmin",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "addAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "admins",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "questionID",
                  "type": "bytes32"
                }
              ],
              "name": "getSettledData",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "isAdmin",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liveness",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "questions",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "creator",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "marketID",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "resolved",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "removeAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "creator",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "marketID",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "ancillaryString",
                  "type": "string"
                }
              ],
              "name": "requestData",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "questionID",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_liveness",
                  "type": "uint256"
                }
              ],
              "name": "setLiveness",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "questionID",
                  "type": "bytes32"
                }
              ],
              "name": "settleRequest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_136": {
                  "entryPoint": null,
                  "id": 136,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_781": {
                  "entryPoint": null,
                  "id": 781,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040527338fac33bd20d4c4cce085c0f347153c06cba2968600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5945535f4f525f4e4f5f51554552590000000000000000000000000000000000600255600060035534801561008e57600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601e600581905550611ed5806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636ad0690a116100715780636ad0690a1461017657806370480275146101945780638bad0c0a146101b057806394c5d4fe146101ba57806395addb90146101d6578063bdb9e4db14610209576100a9565b8063021eb009146100ae5780631785f53c146100ca57806320147a0b146100e657806324d7806c14610116578063429b62e514610146575b600080fd5b6100c860048036038101906100c391906110e8565b610239565b005b6100e460048036038101906100df9190611173565b6102bb565b005b61010060048036038101906100fb91906111d6565b6103d4565b60405161010d919061121c565b60405180910390f35b610130600480360381019061012b9190611173565b61067f565b60405161013d9190611252565b60405180910390f35b610160600480360381019061015b9190611173565b6106ca565b60405161016d919061127c565b60405180910390f35b61017e6106e2565b60405161018b919061127c565b60405180910390f35b6101ae60048036038101906101a99190611173565b6106e8565b005b6101b8610801565b005b6101d460048036038101906101cf91906111d6565b610919565b005b6101f060048036038101906101eb91906111d6565b610bd7565b6040516102009493929190611385565b60405180910390f35b610223600480360381019061021e9190611574565b610dac565b6040516102309190611634565b60405180910390f35b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146102b1576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060058190555050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610333576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e60405160405180910390a350565b600080600460008481526020019081526020016000206040518060800160405290816000820180546104059061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546104319061167e565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b505050505081526020016001820180546104979061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546104c39061167e565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b505050505081526020016002820180546105299061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546105559061167e565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b505050505081526020016003820160009054906101000a900460ff1615151515815250509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9904f9b3060025460035485604001516040518563ffffffff1660e01b815260040161063194939291906116be565b61020060405180830381865afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610673919061197c565b60c00151915050919050565b600060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054149050919050565b60006020528060005260406000206000915090505481565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610760576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc60405160405180910390a350565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610879576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e60405160405180910390a3565b6000600460008381526020019081526020016000206040518060800160405290816000820180546109499061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546109759061167e565b80156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b505050505081526020016001820180546109db9061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a079061167e565b8015610a545780601f10610a2957610100808354040283529160200191610a54565b820191906000526020600020905b815481529060010190602001808311610a3757829003601f168201915b50505050508152602001600282018054610a6d9061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a999061167e565b8015610ae65780601f10610abb57610100808354040283529160200191610ae6565b820191906000526020600020905b815481529060010190602001808311610ac957829003601f168201915b505050505081526020016003820160009054906101000a900460ff1615151515815250509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e9a79a93060025460035485604001516040518563ffffffff1660e01b8152600401610b7594939291906116be565b6020604051808303816000875af1158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb891906119aa565b50610bd3828260000151836020015184604001516001610ffc565b5050565b6004602052806000526040600020600091509050806000018054610bfa9061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c269061167e565b8015610c735780601f10610c4857610100808354040283529160200191610c73565b820191906000526020600020905b815481529060010190602001808311610c5657829003601f168201915b505050505090806001018054610c889061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb49061167e565b8015610d015780601f10610cd657610100808354040283529160200191610d01565b820191906000526020600020905b815481529060010190602001808311610ce457829003601f168201915b505050505090806002018054610d169061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d429061167e565b8015610d8f5780601f10610d6457610100808354040283529160200191610d8f565b820191906000526020600020905b815481529060010190602001808311610d7257829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6000426003819055506000739b4a302a548c7e313c2b74c461db7b84d3074a84905060008084905080805190602001209350610e74848a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846000610ffc565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311df92f16002546003548487876040518663ffffffff1660e01b8152600401610edb959493929190611a36565b6020604051808303816000875af1158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e91906119aa565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473c45fe600254600354846005546040518563ffffffff1660e01b8152600401610f869493929190611a90565b600060405180830381600087803b158015610fa057600080fd5b505af1158015610fb4573d6000803e3d6000fd5b50505050837ff0f7f4e8df0afc32374e8c8a070dd345a4b6321861869a555976c21703f73d9a82604051610fe89190611adc565b60405180910390a250505095945050505050565b60405180608001604052808581526020018481526020018381526020018215158152506004600087815260200190815260200160002060008201518160000190816110479190611ca0565b50602082015181600101908161105d9190611ca0565b5060408201518160020190816110739190611dcd565b5060608201518160030160006101000a81548160ff0219169083151502179055509050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110c5816110b2565b81146110d057600080fd5b50565b6000813590506110e2816110bc565b92915050565b6000602082840312156110fe576110fd6110a8565b5b600061110c848285016110d3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b600060208284031215611189576111886110a8565b5b60006111978482850161115e565b91505092915050565b6000819050919050565b6111b3816111a0565b81146111be57600080fd5b50565b6000813590506111d0816111aa565b92915050565b6000602082840312156111ec576111eb6110a8565b5b60006111fa848285016111c1565b91505092915050565b6000819050919050565b61121681611203565b82525050565b6000602082019050611231600083018461120d565b92915050565b60008115159050919050565b61124c81611237565b82525050565b60006020820190506112676000830184611243565b92915050565b611276816110b2565b82525050565b6000602082019050611291600083018461126d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112d15780820151818401526020810190506112b6565b838111156112e0576000848401525b50505050565b6000601f19601f8301169050919050565b600061130282611297565b61130c81856112a2565b935061131c8185602086016112b3565b611325816112e6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b600061135782611330565b611361818561133b565b93506113718185602086016112b3565b61137a816112e6565b840191505092915050565b6000608082019050818103600083015261139f81876112f7565b905081810360208301526113b381866112f7565b905081810360408301526113c7818561134c565b90506113d66060830184611243565b95945050505050565b600080fd5b600080fd5b600080fd5b60008083601f840112611404576114036113df565b5b8235905067ffffffffffffffff811115611421576114206113e4565b5b60208301915083600182028301111561143d5761143c6113e9565b5b9250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611481826112e6565b810181811067ffffffffffffffff821117156114a05761149f611449565b5b80604052505050565b60006114b361109e565b90506114bf8282611478565b919050565b600067ffffffffffffffff8211156114df576114de611449565b5b6114e8826112e6565b9050602081019050919050565b82818337600083830152505050565b6000611517611512846114c4565b6114a9565b90508281526020810184848401111561153357611532611444565b5b61153e8482856114f5565b509392505050565b600082601f83011261155b5761155a6113df565b5b813561156b848260208601611504565b91505092915050565b6000806000806000606086880312156115905761158f6110a8565b5b600086013567ffffffffffffffff8111156115ae576115ad6110ad565b5b6115ba888289016113ee565b9550955050602086013567ffffffffffffffff8111156115dd576115dc6110ad565b5b6115e9888289016113ee565b9350935050604086013567ffffffffffffffff81111561160c5761160b6110ad565b5b61161888828901611546565b9150509295509295909350565b61162e816111a0565b82525050565b60006020820190506116496000830184611625565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061169657607f821691505b6020821081036116a9576116a861164f565b5b50919050565b6116b881611135565b82525050565b60006080820190506116d360008301876116af565b6116e06020830186611625565b6116ed604083018561126d565b81810360608301526116ff818461134c565b905095945050505050565b600080fd5b60008151905061171e81611147565b92915050565b600061172f82611135565b9050919050565b61173f81611724565b811461174a57600080fd5b50565b60008151905061175c81611736565b92915050565b61176b81611237565b811461177657600080fd5b50565b60008151905061178881611762565b92915050565b60008151905061179d816110bc565b92915050565b600060e082840312156117b9576117b861170a565b5b6117c360e06114a9565b905060006117d384828501611779565b60008301525060206117e784828501611779565b60208301525060406117fb84828501611779565b604083015250606061180f84828501611779565b606083015250608061182384828501611779565b60808301525060a06118378482850161178e565b60a08301525060c061184b8482850161178e565b60c08301525092915050565b61186081611203565b811461186b57600080fd5b50565b60008151905061187d81611857565b92915050565b6000610200828403121561189a5761189961170a565b5b6118a56101406114a9565b905060006118b58482850161170f565b60008301525060206118c98482850161170f565b60208301525060406118dd8482850161174d565b60408301525060606118f184828501611779565b6060830152506080611905848285016117a3565b60808301525061016061191a8482850161186e565b60a08301525061018061192f8482850161186e565b60c0830152506101a06119448482850161178e565b60e0830152506101c06119598482850161178e565b610100830152506101e061196f8482850161178e565b6101208301525092915050565b60006102008284031215611993576119926110a8565b5b60006119a184828501611883565b91505092915050565b6000602082840312156119c0576119bf6110a8565b5b60006119ce8482850161178e565b91505092915050565b6000819050919050565b60006119fc6119f76119f284611115565b6119d7565b611115565b9050919050565b6000611a0e826119e1565b9050919050565b6000611a2082611a03565b9050919050565b611a3081611a15565b82525050565b600060a082019050611a4b6000830188611625565b611a58602083018761126d565b8181036040830152611a6a818661134c565b9050611a796060830185611a27565b611a86608083018461126d565b9695505050505050565b6000608082019050611aa56000830187611625565b611ab2602083018661126d565b8181036040830152611ac4818561134c565b9050611ad3606083018461126d565b95945050505050565b60006020820190508181036000830152611af6818461134c565b905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b23565b611b6a8683611b23565b95508019841693508086168417925050509392505050565b6000611b9d611b98611b93846110b2565b6119d7565b6110b2565b9050919050565b6000819050919050565b611bb783611b82565b611bcb611bc382611ba4565b848454611b30565b825550505050565b600090565b611be0611bd3565b611beb818484611bae565b505050565b5b81811015611c0f57611c04600082611bd8565b600181019050611bf1565b5050565b601f821115611c5457611c2581611afe565b611c2e84611b13565b81016020851015611c3d578190505b611c51611c4985611b13565b830182611bf0565b50505b505050565b600082821c905092915050565b6000611c7760001984600802611c59565b1980831691505092915050565b6000611c908383611c66565b9150826002028217905092915050565b611ca982611297565b67ffffffffffffffff811115611cc257611cc1611449565b5b611ccc825461167e565b611cd7828285611c13565b600060209050601f831160018114611d0a5760008415611cf8578287015190505b611d028582611c84565b865550611d6a565b601f198416611d1886611afe565b60005b82811015611d4057848901518255600182019150602085019450602081019050611d1b565b86831015611d5d5784890151611d59601f891682611c66565b8355505b6001600288020188555050505b505050505050565b60008190508160005260206000209050919050565b601f821115611dc857611d9981611d72565b611da284611b13565b81016020851015611db1578190505b611dc5611dbd85611b13565b830182611bf0565b50505b505050565b611dd682611330565b67ffffffffffffffff811115611def57611dee611449565b5b611df9825461167e565b611e04828285611d87565b600060209050601f831160018114611e375760008415611e25578287015190505b611e2f8582611c84565b865550611e97565b601f198416611e4586611d72565b60005b82811015611e6d57848901518255600182019150602085019450602081019050611e48565b86831015611e8a5784890151611e86601f891682611c66565b8355505b6001600288020188555050505b50505050505056fea26469706673582212207a498ba66cf72e737f499cbe911a263f4834315692a147e00245c565bbc5a71764736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x38FAC33BD20D4C4CCE085C0F347153C06CBA2968 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5945535F4F525F4E4F5F51554552590000000000000000000000000000000000 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x1ED5 DUP1 PUSH2 0xEA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AD0690A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6AD0690A EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x94C5D4FE EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x95ADDB90 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xBDB9E4DB EQ PUSH2 0x209 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x21EB009 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x20147A0B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x121C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x801 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x787A2E12F4A55B658B8F573C32432EE11A5E8B51677D1E1E937AAF6A0BB5776E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x453 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x497 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C3 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x510 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x510 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x555 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x577 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x585 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9904F9B ADDRESS PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x200 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9FFABCA9C8276E99321725BCB43FB076A6C66A54B7F21C4E8146D8519B417DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x787A2E12F4A55B658B8F573C32432EE11A5E8B51677D1E1E937AAF6A0BB5776E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x949 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x975 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x997 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x9DB SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA07 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA54 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA29 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA54 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA37 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA6D SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E9A79A9 ADDRESS PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST POP PUSH2 0xBD3 DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH2 0xFFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xBFA SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC26 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC48 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC88 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCB4 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD01 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCD6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD01 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCE4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xD16 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD42 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD64 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0x9B4A302A548C7E313C2B74C461DB7B84D3074A84 SWAP1 POP PUSH1 0x0 DUP1 DUP5 SWAP1 POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP4 POP PUSH2 0xE74 DUP5 DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP5 PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11DF92F1 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP5 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x473C45FE PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP5 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH32 0xF0F7F4E8DF0AFC32374E8C8A070DD345A4B6321861869A555976C21703F73D9A DUP3 PUSH1 0x40 MLOAD PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1047 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C5 DUP2 PUSH2 0x10B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E2 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10FD PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x110C DUP5 DUP3 DUP6 ADD PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP2 EQ PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116D DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1197 DUP5 DUP3 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B3 DUP2 PUSH2 0x11A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x11BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D0 DUP2 PUSH2 0x11AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11FA DUP5 DUP3 DUP6 ADD PUSH2 0x11C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1216 DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1231 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x120D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124C DUP2 PUSH2 0x1237 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1267 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1276 DUP2 PUSH2 0x10B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1291 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x126D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12D1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12B6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1302 DUP3 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x130C DUP2 DUP6 PUSH2 0x12A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x131C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x1325 DUP2 PUSH2 0x12E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1357 DUP3 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1361 DUP2 DUP6 PUSH2 0x133B JUMP JUMPDEST SWAP4 POP PUSH2 0x1371 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x12E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x139F DUP2 DUP8 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13B3 DUP2 DUP7 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13C7 DUP2 DUP6 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP PUSH2 0x13D6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x13DF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1421 JUMPI PUSH2 0x1420 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1481 DUP3 PUSH2 0x12E6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x1449 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B3 PUSH2 0x109E JUMP JUMPDEST SWAP1 POP PUSH2 0x14BF DUP3 DUP3 PUSH2 0x1478 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14DF JUMPI PUSH2 0x14DE PUSH2 0x1449 JUMP JUMPDEST JUMPDEST PUSH2 0x14E8 DUP3 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 PUSH2 0x1512 DUP5 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1533 JUMPI PUSH2 0x1532 PUSH2 0x1444 JUMP JUMPDEST JUMPDEST PUSH2 0x153E DUP5 DUP3 DUP6 PUSH2 0x14F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x155B JUMPI PUSH2 0x155A PUSH2 0x13DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x156B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1504 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1590 JUMPI PUSH2 0x158F PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AE JUMPI PUSH2 0x15AD PUSH2 0x10AD JUMP JUMPDEST JUMPDEST PUSH2 0x15BA DUP9 DUP3 DUP10 ADD PUSH2 0x13EE JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x10AD JUMP JUMPDEST JUMPDEST PUSH2 0x15E9 DUP9 DUP3 DUP10 ADD PUSH2 0x13EE JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x10AD JUMP JUMPDEST JUMPDEST PUSH2 0x1618 DUP9 DUP3 DUP10 ADD PUSH2 0x1546 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x162E DUP2 PUSH2 0x11A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1649 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1696 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x164F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16D3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x16E0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x16ED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x126D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16FF DUP2 DUP5 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x171E DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172F DUP3 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173F DUP2 PUSH2 0x1724 JUMP JUMPDEST DUP2 EQ PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x175C DUP2 PUSH2 0x1736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x176B DUP2 PUSH2 0x1237 JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1788 DUP2 PUSH2 0x1762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x179D DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH2 0x17C3 PUSH1 0xE0 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x17E7 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x17FB DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x180F DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1823 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1837 DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x184B DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1860 DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP2 EQ PUSH2 0x186B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x187D DUP2 PUSH2 0x1857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH2 0x18A5 PUSH2 0x140 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18B5 DUP5 DUP3 DUP6 ADD PUSH2 0x170F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x18C9 DUP5 DUP3 DUP6 ADD PUSH2 0x170F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x18DD DUP5 DUP3 DUP6 ADD PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x18F1 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1905 DUP5 DUP3 DUP6 ADD PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x191A DUP5 DUP3 DUP6 ADD PUSH2 0x186E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x192F DUP5 DUP3 DUP6 ADD PUSH2 0x186E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x1A0 PUSH2 0x1944 DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x1C0 PUSH2 0x1959 DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0x196F DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1992 PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A1 DUP5 DUP3 DUP6 ADD PUSH2 0x1883 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CE DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FC PUSH2 0x19F7 PUSH2 0x19F2 DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0E DUP3 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 DUP3 PUSH2 0x1A03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A30 DUP2 PUSH2 0x1A15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1A58 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x126D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A6A DUP2 DUP7 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A79 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A86 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x126D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AA5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1AB2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x126D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1AC4 DUP2 DUP6 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x126D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 DUP5 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1B60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x1B6A DUP7 DUP4 PUSH2 0x1B23 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9D PUSH2 0x1B98 PUSH2 0x1B93 DUP5 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB7 DUP4 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x1BCB PUSH2 0x1BC3 DUP3 PUSH2 0x1BA4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B30 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1BE0 PUSH2 0x1BD3 JUMP JUMPDEST PUSH2 0x1BEB DUP2 DUP5 DUP5 PUSH2 0x1BAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C04 PUSH1 0x0 DUP3 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C54 JUMPI PUSH2 0x1C25 DUP2 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1C2E DUP5 PUSH2 0x1B13 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C3D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1C51 PUSH2 0x1C49 DUP6 PUSH2 0x1B13 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1BF0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C77 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1C59 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C90 DUP4 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA9 DUP3 PUSH2 0x1297 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC2 JUMPI PUSH2 0x1CC1 PUSH2 0x1449 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCC DUP3 SLOAD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1CD7 DUP3 DUP3 DUP6 PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1CF8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D02 DUP6 DUP3 PUSH2 0x1C84 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D18 DUP7 PUSH2 0x1AFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D40 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1D5D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1D59 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C66 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1D99 DUP2 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1DA2 DUP5 PUSH2 0x1B13 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DB1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1DC5 PUSH2 0x1DBD DUP6 PUSH2 0x1B13 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1BF0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DD6 DUP3 PUSH2 0x1330 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DEF JUMPI PUSH2 0x1DEE PUSH2 0x1449 JUMP JUMPDEST JUMPDEST PUSH2 0x1DF9 DUP3 SLOAD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1E04 DUP3 DUP3 DUP6 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E37 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1E25 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1E2F DUP6 DUP3 PUSH2 0x1C84 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1E45 DUP7 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E6D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E48 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E8A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E86 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C66 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x498BA66CF72E737F499CBE911A263F4834315692A147E00245C565 0xBB 0xC5 0xA7 OR PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "243:4165:1:-:0;;;351:42;306:88;;;;;;;;;;;;;;;;;;;;470:26;449:47;;1264:1;1242:23;;1358:44;;;;;;;;;;422:1:5;401:6;:18;408:10;401:18;;;;;;;;;;;;;;;:22;;;;1393:2:1;1382:8;:13;;;;243:4165;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_saveQuestion_315": {
                  "entryPoint": 4092,
                  "id": 315,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@addAdmin_802": {
                  "entryPoint": 1768,
                  "id": 802,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@admins_756": {
                  "entryPoint": 1738,
                  "id": 756,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getSettledData_290": {
                  "entryPoint": 980,
                  "id": 290,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isAdmin_859": {
                  "entryPoint": 1663,
                  "id": 859,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@liveness_128": {
                  "entryPoint": 1762,
                  "id": 128,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@questions_126": {
                  "entryPoint": 3031,
                  "id": 126,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@removeAdmin_823": {
                  "entryPoint": 699,
                  "id": 823,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@renounceAdmin_844": {
                  "entryPoint": 2049,
                  "id": 844,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@requestData_223": {
                  "entryPoint": 3500,
                  "id": 223,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@setLiveness_149": {
                  "entryPoint": 569,
                  "id": 149,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@settleRequest_261": {
                  "entryPoint": 2329,
                  "id": 261,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_available_length_t_string_memory_ptr": {
                  "entryPoint": 5380,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_t_address": {
                  "entryPoint": 4446,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 5903,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 6009,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes32": {
                  "entryPoint": 4545,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_contract$_IERC20_$77_fromMemory": {
                  "entryPoint": 5965,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_int256_fromMemory": {
                  "entryPoint": 6254,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_string_calldata_ptr": {
                  "entryPoint": 5102,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_t_string_memory_ptr": {
                  "entryPoint": 5446,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_struct$_RequestSettings_$474_memory_ptr_fromMemory": {
                  "entryPoint": 6051,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_struct$_Request_$497_memory_ptr_fromMemory": {
                  "entryPoint": 6275,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 4307,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256_fromMemory": {
                  "entryPoint": 6030,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 4467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 4566,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_memory_ptr": {
                  "entryPoint": 5492,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_struct$_Request_$497_memory_ptr_fromMemory": {
                  "entryPoint": 6524,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 4328,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 6570,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 5807,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 4675,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes32_to_t_bytes32_fromStack": {
                  "entryPoint": 5669,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
                  "entryPoint": 4940,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
                  "entryPoint": 6695,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_int256_to_t_int256_fromStack": {
                  "entryPoint": 4621,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 4855,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 4717,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 5822,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 4690,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": 5684,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_contract$_IERC20_$77_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 6710,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
                  "entryPoint": 6800,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 6876,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
                  "entryPoint": 4636,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bool__fromStack_reversed": {
                  "entryPoint": 4997,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 4732,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 5289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 4254,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_t_string_memory_ptr": {
                  "entryPoint": 5316,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_t_bytes_storage": {
                  "entryPoint": 7538,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_t_string_storage": {
                  "entryPoint": 6910,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_bytes_memory_ptr": {
                  "entryPoint": 4912,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_string_memory_ptr": {
                  "entryPoint": 4759,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
                  "entryPoint": 4923,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 4770,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_t_bytes_storage": {
                  "entryPoint": 7559,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "clean_up_bytearray_end_slots_t_string_storage": {
                  "entryPoint": 7187,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_t_address": {
                  "entryPoint": 4405,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 4663,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bytes32": {
                  "entryPoint": 4512,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_contract$_IERC20_$77": {
                  "entryPoint": 5924,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_int256": {
                  "entryPoint": 4611,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 4373,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 4274,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_t_bytes1": {
                  "entryPoint": 7152,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_t_contract$_IERC20_$77_to_t_address": {
                  "entryPoint": 6677,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_address": {
                  "entryPoint": 6659,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint160_to_t_uint160": {
                  "entryPoint": 6625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint256_to_t_uint256": {
                  "entryPoint": 7042,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
                  "entryPoint": 7629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 7328,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_calldata_to_memory": {
                  "entryPoint": 5365,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_memory_to_memory": {
                  "entryPoint": 4787,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "divide_by_32_ceil": {
                  "entryPoint": 6931,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 5758,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 7300,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 5240,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 6615,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 7270,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x22": {
                  "entryPoint": 5711,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 5193,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_t_uint256": {
                  "entryPoint": 7076,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
                  "entryPoint": 5092,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 5087,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
                  "entryPoint": 5898,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 5097,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                  "entryPoint": 5188,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 4269,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 4264,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 4838,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 6947,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 7257,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_t_uint256": {
                  "entryPoint": 7128,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 6960,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_storage_value_t_uint256_to_t_uint256": {
                  "entryPoint": 7086,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 4423,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_bool": {
                  "entryPoint": 5986,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_bytes32": {
                  "entryPoint": 4522,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_contract$_IERC20_$77": {
                  "entryPoint": 5942,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_int256": {
                  "entryPoint": 6231,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 4284,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_t_uint256": {
                  "entryPoint": 7123,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:26852:6",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:6",
                            "type": ""
                          }
                        ],
                        "src": "7:75:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:32:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:16:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "400:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:6",
                            "type": ""
                          }
                        ],
                        "src": "334:77:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "460:79:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "517:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "526:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "529:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "519:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "519:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "519:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "483:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "508:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "490:17:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "490:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "480:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "480:35:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "473:43:6"
                              },
                              "nodeType": "YulIf",
                              "src": "470:63:6"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "453:5:6",
                            "type": ""
                          }
                        ],
                        "src": "417:122:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "597:87:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "607:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "629:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "616:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "616:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "607:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "672:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "645:26:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "645:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "645:33:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "575:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "583:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "591:5:6",
                            "type": ""
                          }
                        ],
                        "src": "545:139:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "756:263:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "802:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "804:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "804:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "804:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "777:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "786:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "773:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "773:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "798:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "769:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "766:119:6"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "895:117:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "910:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "924:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "914:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "939:63:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "974:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "985:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "970:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "970:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "994:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "949:20:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "949:53:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "939:6:6"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "726:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "737:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "749:6:6",
                            "type": ""
                          }
                        ],
                        "src": "690:329:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1070:81:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1080:65:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1095:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1102:42:6",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1091:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1091:54:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1080:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1052:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1062:7:6",
                            "type": ""
                          }
                        ],
                        "src": "1025:126:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1202:51:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1212:35:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1241:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "1223:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1223:24:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1212:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1184:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1194:7:6",
                            "type": ""
                          }
                        ],
                        "src": "1157:96:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1302:79:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1359:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1368:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1371:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1361:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1361:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1361:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1325:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1350:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1332:17:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1332:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1322:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1322:35:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1315:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1315:43:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1312:63:6"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1295:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1259:122:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1439:87:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1449:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1471:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1458:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1458:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1514:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1487:26:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1487:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1487:33:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1417:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1425:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1433:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1387:139:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1598:263:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1644:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1646:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1646:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1646:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1619:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1628:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1615:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1615:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1640:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1611:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1608:119:6"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1737:117:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1752:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1766:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1756:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1781:63:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1816:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1827:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1812:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1812:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1836:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1791:20:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1791:53:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1781:6:6"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1568:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1579:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1591:6:6",
                            "type": ""
                          }
                        ],
                        "src": "1532:329:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1912:32:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1922:16:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1933:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1922:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1894:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1904:7:6",
                            "type": ""
                          }
                        ],
                        "src": "1867:77:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1993:79:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2050:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2059:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2062:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2052:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2052:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2052:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2016:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2041:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bytes32",
                                          "nodeType": "YulIdentifier",
                                          "src": "2023:17:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2023:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2013:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2013:35:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2006:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2006:43:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2003:63:6"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1986:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1950:122:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2130:87:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2140:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2162:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2149:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2149:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2140:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2205:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bytes32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2178:26:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2178:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2178:33:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2108:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2116:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2124:5:6",
                            "type": ""
                          }
                        ],
                        "src": "2078:139:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2289:263:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2335:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "2337:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2337:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2337:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2310:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2319:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2306:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2306:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2331:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2302:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2302:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2299:119:6"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2428:117:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2443:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2457:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2447:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2472:63:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2507:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2518:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2503:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2503:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2527:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "2482:20:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2482:53:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2472:6:6"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2259:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2270:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2282:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2223:329:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2602:32:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2612:16:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2623:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2612:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2584:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2594:7:6",
                            "type": ""
                          }
                        ],
                        "src": "2558:76:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2703:52:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2720:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2742:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2725:16:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2725:23:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2713:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2713:36:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2713:36:6"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int256_to_t_int256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2691:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2698:3:6",
                            "type": ""
                          }
                        ],
                        "src": "2640:115:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2857:122:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2867:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2879:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2890:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2875:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2875:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2867:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2945:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2958:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2969:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2954:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2954:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int256_to_t_int256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2903:41:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2903:69:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2903:69:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2829:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2841:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2852:4:6",
                            "type": ""
                          }
                        ],
                        "src": "2761:218:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3027:48:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3037:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3062:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3055:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3055:13:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3048:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3048:21:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3037:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3009:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3019:7:6",
                            "type": ""
                          }
                        ],
                        "src": "2985:90:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3140:50:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3157:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3177:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "3162:14:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3162:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3150:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3150:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3150:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3128:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3135:3:6",
                            "type": ""
                          }
                        ],
                        "src": "3081:109:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3288:118:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3298:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3310:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3321:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3306:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3306:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3372:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3385:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3396:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3381:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3381:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3334:37:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3334:65:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3334:65:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3260:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3272:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3283:4:6",
                            "type": ""
                          }
                        ],
                        "src": "3196:210:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3477:53:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3494:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3517:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3499:17:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3499:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3487:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3487:37:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3487:37:6"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3465:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3472:3:6",
                            "type": ""
                          }
                        ],
                        "src": "3412:118:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3634:124:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3644:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3656:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3667:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3652:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3652:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3644:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3724:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3737:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3748:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3733:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3733:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3680:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3680:71:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3680:71:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3606:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3618:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3629:4:6",
                            "type": ""
                          }
                        ],
                        "src": "3536:222:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3823:40:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3834:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3850:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3844:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3844:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3834:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3806:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3816:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3764:99:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3965:73:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3982:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3987:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3975:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3975:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3975:19:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4003:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4022:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4027:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4018:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4018:14:6"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4003:11:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3937:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3942:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "3953:11:6",
                            "type": ""
                          }
                        ],
                        "src": "3869:169:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4093:258:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4103:10:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4112:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "4107:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4172:63:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "4197:3:6"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4202:1:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4193:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4193:11:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4216:3:6"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4221:1:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4212:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4212:11:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4206:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4206:18:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4186:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4186:39:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4186:39:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4133:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4136:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4130:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4130:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "4144:19:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4146:15:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4155:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4158:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4151:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4151:10:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4146:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "4126:3:6",
                                "statements": []
                              },
                              "src": "4122:113:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4269:76:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "4319:3:6"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "4324:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4315:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4315:16:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4333:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4308:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4308:27:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4308:27:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4250:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4253:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4247:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4247:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4244:101:6"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "4075:3:6",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "4080:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "4085:6:6",
                            "type": ""
                          }
                        ],
                        "src": "4044:307:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4405:54:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4415:38:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4433:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4440:2:6",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4429:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4429:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4449:2:6",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4445:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4445:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4425:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4425:28:6"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "4415:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4388:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "4398:6:6",
                            "type": ""
                          }
                        ],
                        "src": "4357:102:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4557:272:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4567:53:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4614:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4581:32:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4581:39:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4571:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4629:78:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4695:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4700:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4636:58:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4636:71:6"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4629:3:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4742:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4749:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4738:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4738:16:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4756:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4761:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4716:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4716:52:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4716:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4777:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4788:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4815:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "4793:21:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4793:29:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4784:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4784:39:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4777:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4538:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4545:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4553:3:6",
                            "type": ""
                          }
                        ],
                        "src": "4465:364:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4893:40:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4904:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4920:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4914:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4914:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4904:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4876:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "4886:6:6",
                            "type": ""
                          }
                        ],
                        "src": "4835:98:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5034:73:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5051:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5056:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5044:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5044:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5044:19:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5072:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5091:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5096:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5087:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5087:14:6"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5072:11:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5006:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5011:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5022:11:6",
                            "type": ""
                          }
                        ],
                        "src": "4939:168:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5203:270:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5213:52:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5259:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5227:31:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5227:38:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5217:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5274:77:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5339:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5344:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5281:57:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5281:70:6"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5274:3:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5386:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5393:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5382:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5382:16:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5400:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5405:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5360:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5360:52:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5360:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5421:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5432:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5459:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5437:21:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5437:29:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5428:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5428:39:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5421:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5184:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5191:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5199:3:6",
                            "type": ""
                          }
                        ],
                        "src": "5113:360:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5713:576:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5723:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5735:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5746:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5731:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5731:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5723:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5771:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5782:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5767:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5767:17:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "5790:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5796:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5786:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5786:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5760:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5760:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5760:47:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5816:86:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5888:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "5897:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5824:63:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5824:78:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5816:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5923:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5934:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5919:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5919:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "5943:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5949:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5939:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5939:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5912:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5912:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5912:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5969:86:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6041:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "6050:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5977:63:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5977:78:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5969:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6076:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6087:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6072:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6072:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "6096:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6102:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6092:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6092:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6065:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6065:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6065:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6122:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6192:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "6201:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6130:61:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6130:76:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6122:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "6254:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6267:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6278:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6263:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6263:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6216:37:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6216:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6216:66:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5661:9:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5673:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5681:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5689:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5697:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5708:4:6",
                            "type": ""
                          }
                        ],
                        "src": "5479:810:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6384:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6401:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6404:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6394:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6394:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6394:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6295:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6507:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6524:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6527:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6517:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6517:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6517:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6418:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6630:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6647:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6650:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6640:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6640:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6640:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6541:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6753:478:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6802:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "6804:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6804:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6804:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6781:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6789:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6777:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6777:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "6796:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "6773:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6773:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6766:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6766:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "6763:122:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6894:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6917:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6904:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6904:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6894:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6967:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                                        "nodeType": "YulIdentifier",
                                        "src": "6969:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6969:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6969:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6939:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6947:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6936:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6936:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "6933:117:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7059:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7075:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7083:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7071:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7071:17:6"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7059:8:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7142:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                        "nodeType": "YulIdentifier",
                                        "src": "7144:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7144:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7144:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7107:8:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "7121:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7129:4:6",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "7117:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7117:17:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7103:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7103:32:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "7137:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7100:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7100:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7097:128:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "6720:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6728:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "6736:8:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6746:6:6",
                            "type": ""
                          }
                        ],
                        "src": "6678:553:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7326:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7343:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7346:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7336:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7336:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7336:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7237:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7388:152:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7405:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7408:77:6",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7398:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7398:88:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7398:88:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7502:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7505:4:6",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7495:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7495:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7495:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7526:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7529:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7519:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7519:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7519:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "7360:180:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7589:238:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7599:58:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7621:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "7651:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "7629:21:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7629:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7617:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7617:40:6"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "7603:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7768:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "7770:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7770:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7770:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7711:10:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7723:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "7708:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7708:34:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7747:10:6"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7759:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "7744:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7744:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "7705:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7705:62:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7702:88:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7806:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7810:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7799:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7799:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7799:22:6"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "7575:6:6",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "7583:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7546:281:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7874:88:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7884:30:6",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "7894:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7894:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7884:6:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7943:6:6"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7951:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "7923:19:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7923:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7923:33:6"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "7858:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "7867:6:6",
                            "type": ""
                          }
                        ],
                        "src": "7833:129:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8035:241:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8140:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "8142:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8142:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8142:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8112:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8120:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8109:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8109:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8106:56:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8172:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8202:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "8180:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8180:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "8172:4:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8246:23:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8258:4:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8264:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8254:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8254:15:6"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "8246:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8019:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8030:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7968:308:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8333:103:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "8356:3:6"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8361:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8366:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "8343:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8343:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8343:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "8414:3:6"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8419:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8410:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8410:16:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8428:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8403:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8403:27:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8403:27:6"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "8315:3:6",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "8320:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8325:6:6",
                            "type": ""
                          }
                        ],
                        "src": "8282:154:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8526:328:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8536:75:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8603:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "8561:41:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8561:49:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8545:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8545:66:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "8536:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "8627:5:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8634:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8620:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8620:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8620:21:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8650:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "8665:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8672:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8661:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8661:16:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "8654:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8715:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                        "nodeType": "YulIdentifier",
                                        "src": "8717:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8717:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8717:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "8696:3:6"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8701:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8692:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8692:16:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "8710:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8689:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8689:25:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8686:112:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8831:3:6"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "8836:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8841:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8807:23:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8807:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8807:41:6"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "8499:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8504:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8512:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "8520:5:6",
                            "type": ""
                          }
                        ],
                        "src": "8442:412:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8936:278:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8985:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "8987:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8987:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8987:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8964:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8972:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8960:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8960:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "8979:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8956:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8956:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8949:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8949:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8946:122:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9077:34:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9104:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9091:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9091:20:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "9081:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9120:88:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9181:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9189:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9177:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9177:17:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9196:6:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "9204:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9129:47:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9129:79:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "9120:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8914:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8922:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "8930:5:6",
                            "type": ""
                          }
                        ],
                        "src": "8874:340:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9370:1049:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9416:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "9418:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9418:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9418:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9391:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9400:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9387:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9387:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9412:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9383:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9383:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "9380:119:6"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9509:297:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9524:45:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9555:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9566:1:6",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9551:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9551:17:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9538:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9538:31:6"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9528:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9616:83:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "9618:77:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9618:79:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9618:79:6"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9588:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9596:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9585:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9585:30:6"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "9582:117:6"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9713:83:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9768:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9779:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9764:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9764:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9788:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9731:32:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9731:65:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "9713:6:6"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9721:6:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9816:298:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9831:46:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9862:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9873:2:6",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9858:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9858:18:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9845:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9845:32:6"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9835:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9924:83:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "9926:77:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9926:79:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9926:79:6"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9896:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9904:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9893:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9893:30:6"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "9890:117:6"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10021:83:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10076:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10087:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10072:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10072:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10096:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "10039:32:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10039:65:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "10021:6:6"
                                    },
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "10029:6:6"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10124:288:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10139:46:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10170:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10181:2:6",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10166:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10166:18:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10153:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10153:32:6"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10143:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10232:83:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "10234:77:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10234:79:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10234:79:6"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10204:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10212:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10201:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10201:30:6"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "10198:117:6"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10329:73:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10374:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10385:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10370:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10370:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10394:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "10339:30:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10339:63:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "10329:6:6"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9308:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9319:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9331:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9339:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9347:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "9355:6:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "9363:6:6",
                            "type": ""
                          }
                        ],
                        "src": "9220:1199:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10490:53:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10507:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "10530:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "10512:17:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10512:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10500:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10500:37:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10500:37:6"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10478:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10485:3:6",
                            "type": ""
                          }
                        ],
                        "src": "10425:118:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10647:124:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10657:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10669:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10680:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10665:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10665:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10657:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10737:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10750:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10761:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10746:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10746:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10693:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10693:71:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10693:71:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10619:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10631:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10642:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10549:222:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10805:152:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10822:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10825:77:6",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10815:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10815:88:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10815:88:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10919:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10922:4:6",
                                    "type": "",
                                    "value": "0x22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10912:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10912:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10912:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10943:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10946:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10936:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10936:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10936:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x22",
                        "nodeType": "YulFunctionDefinition",
                        "src": "10777:180:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11014:269:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11024:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "11038:4:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11044:1:6",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "11034:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11034:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11024:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11055:38:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "11085:4:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11091:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11081:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11081:12:6"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "11059:18:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11132:51:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "11146:27:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "11160:6:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11168:4:6",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "11156:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11156:17:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "11146:6:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "11112:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11105:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11105:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11102:81:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11235:42:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x22",
                                        "nodeType": "YulIdentifier",
                                        "src": "11249:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11249:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11249:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "11199:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "11222:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11230:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "11219:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11219:14:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "11196:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11196:38:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11193:84:6"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "10998:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11007:6:6",
                            "type": ""
                          }
                        ],
                        "src": "10963:320:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11354:53:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11371:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11394:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "11376:17:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11376:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11364:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11364:37:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11364:37:6"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11342:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11349:3:6",
                            "type": ""
                          }
                        ],
                        "src": "11289:118:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11613:440:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11623:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11635:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11646:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11631:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11631:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11623:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11704:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11717:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11728:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11713:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11713:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11660:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11660:71:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11660:71:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11785:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11798:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11809:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11794:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11794:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11741:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11741:72:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11741:72:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11867:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11880:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11891:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11876:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11876:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11823:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11823:72:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11823:72:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11916:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11927:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11912:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11912:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11936:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11942:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11932:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11932:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11905:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11905:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11905:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11962:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "12032:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "12041:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11970:61:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11970:76:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11962:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11561:9:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "11573:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11581:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11589:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11597:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11608:4:6",
                            "type": ""
                          }
                        ],
                        "src": "11413:640:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12148:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12165:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12168:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12158:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12158:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12158:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                        "nodeType": "YulFunctionDefinition",
                        "src": "12059:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12271:28:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12288:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12291:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12281:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12281:12:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12281:12:6"
                            }
                          ]
                        },
                        "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
                        "nodeType": "YulFunctionDefinition",
                        "src": "12182:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12368:80:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12378:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "12393:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12387:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12387:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12378:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12436:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "12409:26:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12409:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12409:33:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "12346:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12354:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12362:5:6",
                            "type": ""
                          }
                        ],
                        "src": "12305:143:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12512:51:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12522:35:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12551:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "12533:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12533:24:6"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12522:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12494:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12504:7:6",
                            "type": ""
                          }
                        ],
                        "src": "12454:109:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12625:92:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12695:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12704:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12707:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12697:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12697:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12697:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12648:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12686:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IERC20_$77",
                                          "nodeType": "YulIdentifier",
                                          "src": "12655:30:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12655:37:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12645:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12645:48:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12638:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12638:56:6"
                              },
                              "nodeType": "YulIf",
                              "src": "12635:76:6"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12618:5:6",
                            "type": ""
                          }
                        ],
                        "src": "12569:148:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12799:93:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12809:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "12824:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12818:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12818:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12809:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12880:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IERC20_$77",
                                  "nodeType": "YulIdentifier",
                                  "src": "12840:39:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12840:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12840:46:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "12777:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12785:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12793:5:6",
                            "type": ""
                          }
                        ],
                        "src": "12723:169:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12938:76:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12992:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13001:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13004:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12994:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12994:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12994:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12961:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12983:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "12968:14:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12968:21:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12958:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12958:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12951:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12951:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "12948:60:6"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12931:5:6",
                            "type": ""
                          }
                        ],
                        "src": "12898:116:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13080:77:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13090:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "13105:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13099:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13099:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13090:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13145:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "13121:23:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13121:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13121:30:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "13058:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13066:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13074:5:6",
                            "type": ""
                          }
                        ],
                        "src": "13020:137:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13226:80:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13236:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "13251:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13245:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13245:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13236:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13294:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13267:26:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13267:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13267:33:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "13204:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13212:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13220:5:6",
                            "type": ""
                          }
                        ],
                        "src": "13163:143:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13460:1447:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13504:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                                        "nodeType": "YulIdentifier",
                                        "src": "13506:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13506:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13506:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "13481:3:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13486:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13477:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13477:19:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13498:4:6",
                                    "type": "",
                                    "value": "0xe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13473:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13473:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "13470:117:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13596:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13621:4:6",
                                    "type": "",
                                    "value": "0xe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "13605:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13605:21:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13596:5:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13636:164:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13677:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13691:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "13681:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13717:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13724:4:6",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13713:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13713:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "13764:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "13775:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "13760:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13760:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "13784:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_bool_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "13731:28:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13731:57:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "13706:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13706:83:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13706:83:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13810:170:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13856:16:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13870:2:6",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "13860:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "13897:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13904:4:6",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13893:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13893:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "13944:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "13955:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "13940:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13940:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "13964:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_bool_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "13911:28:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13911:57:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "13886:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13886:83:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13886:83:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13990:178:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14044:16:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14058:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14048:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14085:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14092:4:6",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14081:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14081:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "14132:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "14143:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "14128:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14128:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "14152:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_bool_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "14099:28:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14099:57:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "14074:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14074:83:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14074:83:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14178:178:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14232:16:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14246:2:6",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14236:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14273:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14280:4:6",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14269:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14269:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "14320:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "14331:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "14316:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14316:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "14340:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_bool_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "14287:28:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14287:57:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "14262:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14262:83:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14262:83:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14366:178:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14419:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14433:3:6",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14423:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14461:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14468:4:6",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14457:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14457:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "14508:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "14519:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "14504:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14504:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "14528:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_bool_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "14475:28:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14475:57:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "14450:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14450:83:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14450:83:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14554:163:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14589:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14603:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14593:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14631:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14638:4:6",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14627:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14627:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "14681:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "14692:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "14677:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14677:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "14701:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "14645:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14645:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "14620:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14620:86:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14620:86:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "14727:173:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "14772:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14786:3:6",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "14776:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14814:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14821:4:6",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "14810:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14810:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "14864:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "14875:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "14860:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14860:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "14884:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "14828:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14828:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "14803:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14803:86:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14803:86:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_struct$_RequestSettings_$474_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13435:9:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13446:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13454:5:6",
                            "type": ""
                          }
                        ],
                        "src": "13362:1545:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14955:78:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15011:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15020:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15023:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15013:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15013:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15013:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14978:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15002:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int256",
                                          "nodeType": "YulIdentifier",
                                          "src": "14985:16:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14985:23:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14975:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14975:34:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14968:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14968:42:6"
                              },
                              "nodeType": "YulIf",
                              "src": "14965:62:6"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14948:5:6",
                            "type": ""
                          }
                        ],
                        "src": "14913:120:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15101:79:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15111:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "15126:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15120:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15120:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "15111:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15168:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int256",
                                  "nodeType": "YulIdentifier",
                                  "src": "15142:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15142:32:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15142:32:6"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "15079:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15087:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15095:5:6",
                            "type": ""
                          }
                        ],
                        "src": "15039:141:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15318:2006:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15364:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                                        "nodeType": "YulIdentifier",
                                        "src": "15366:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15366:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15366:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "15339:3:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15344:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15335:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15335:19:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15356:6:6",
                                    "type": "",
                                    "value": "0x0200"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15331:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15331:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "15328:119:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15456:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15481:6:6",
                                    "type": "",
                                    "value": "0x0140"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "15465:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15465:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "15456:5:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15498:165:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15537:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15551:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15541:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15577:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15584:4:6",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15573:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15573:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "15627:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "15638:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "15623:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15623:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "15647:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_address_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "15591:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15591:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "15566:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15566:86:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15566:86:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15673:166:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15712:16:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15726:2:6",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15716:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15753:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15760:4:6",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15749:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15749:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "15803:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "15814:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "15799:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15799:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "15823:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_address_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "15767:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15767:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "15742:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15742:86:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15742:86:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "15849:179:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15888:16:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15902:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "15892:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15929:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15936:4:6",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15925:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15925:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "15992:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "16003:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "15988:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15988:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "16012:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "15943:44:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15943:73:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "15918:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15918:99:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15918:99:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16038:162:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16076:16:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16090:2:6",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16080:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16117:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16124:4:6",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16113:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16113:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "16164:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "16175:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "16160:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16160:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "16184:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_bool_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "16131:28:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16131:57:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "16106:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16106:83:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16106:83:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16210:206:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16256:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16270:3:6",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16260:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16298:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16305:4:6",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16294:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16294:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "16380:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "16391:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "16376:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16376:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "16400:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_struct$_RequestSettings_$474_memory_ptr_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "16312:63:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16312:92:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "16287:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16287:118:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16287:118:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16426:171:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16470:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16484:3:6",
                                    "type": "",
                                    "value": "352"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16474:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16512:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16519:4:6",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16508:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16508:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "16561:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "16572:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "16557:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16557:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "16581:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_int256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "16526:30:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16526:59:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "16501:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16501:85:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16501:85:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16607:171:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16651:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16665:3:6",
                                    "type": "",
                                    "value": "384"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16655:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16693:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16700:4:6",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16689:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16689:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "16742:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "16753:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "16738:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16738:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "16762:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_int256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "16707:30:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16707:59:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "16682:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16682:85:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16682:85:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16788:173:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "16833:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16847:3:6",
                                    "type": "",
                                    "value": "416"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "16837:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "16875:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16882:4:6",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16871:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16871:16:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "16925:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "16936:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "16921:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16921:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "16945:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "16889:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16889:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "16864:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16864:86:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16864:86:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "16971:167:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "17008:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17022:3:6",
                                    "type": "",
                                    "value": "448"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "17012:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "17050:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "17057:6:6",
                                            "type": "",
                                            "value": "0x0100"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17046:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17046:18:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "17102:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "17113:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "17098:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "17098:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "17122:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "17066:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17066:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "17039:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17039:88:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "17039:88:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "17148:169:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "17187:17:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17201:3:6",
                                    "type": "",
                                    "value": "480"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "17191:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "17229:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "17236:6:6",
                                            "type": "",
                                            "value": "0x0120"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17225:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17225:18:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "17281:9:6"
                                              },
                                              {
                                                "name": "offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "17292:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "17277:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "17277:22:6"
                                          },
                                          {
                                            "name": "end",
                                            "nodeType": "YulIdentifier",
                                            "src": "17301:3:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_uint256_fromMemory",
                                          "nodeType": "YulIdentifier",
                                          "src": "17245:31:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17245:60:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "17218:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17218:88:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "17218:88:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_struct$_Request_$497_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15293:9:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15304:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15312:5:6",
                            "type": ""
                          }
                        ],
                        "src": "15228:2096:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17431:299:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17478:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "17480:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17480:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17480:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "17452:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17461:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17448:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17448:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17473:3:6",
                                    "type": "",
                                    "value": "512"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17444:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17444:33:6"
                              },
                              "nodeType": "YulIf",
                              "src": "17441:120:6"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "17571:152:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "17586:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17600:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "17590:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17615:98:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "17685:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "17696:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17681:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17681:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "17705:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_struct$_Request_$497_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "17625:55:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17625:88:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "17615:6:6"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_struct$_Request_$497_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17401:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "17412:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17424:6:6",
                            "type": ""
                          }
                        ],
                        "src": "17330:400:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17813:274:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17859:83:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "17861:77:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17861:79:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17861:79:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "17834:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17843:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17830:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17830:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17855:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17826:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17826:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "17823:119:6"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "17952:128:6",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "17967:15:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17981:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "17971:6:6",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17996:74:6",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "18042:9:6"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "18053:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "18038:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "18038:22:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "18062:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "18006:31:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18006:64:6"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "17996:6:6"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17783:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "17794:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17806:6:6",
                            "type": ""
                          }
                        ],
                        "src": "17736:351:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18125:28:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18135:12:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18142:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "18135:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "identity",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18111:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "18121:3:6",
                            "type": ""
                          }
                        ],
                        "src": "18093:60:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18219:82:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18229:66:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "18287:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint160",
                                          "nodeType": "YulIdentifier",
                                          "src": "18269:17:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "18269:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "18260:8:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18260:34:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18242:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18242:53:6"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18229:9:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18199:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18209:9:6",
                            "type": ""
                          }
                        ],
                        "src": "18159:142:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18367:66:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18377:50:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18421:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18390:30:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18390:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18377:9:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18347:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18357:9:6",
                            "type": ""
                          }
                        ],
                        "src": "18307:126:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18512:66:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18522:50:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18566:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "18535:30:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18535:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18522:9:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18492:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18502:9:6",
                            "type": ""
                          }
                        ],
                        "src": "18439:139:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18662:79:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18679:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "18728:5:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "18684:43:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18684:50:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18672:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18672:63:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18672:63:6"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18650:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18657:3:6",
                            "type": ""
                          }
                        ],
                        "src": "18584:157:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18988:536:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18998:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19010:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19021:3:6",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19006:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19006:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18998:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19079:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19092:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19103:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19088:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19088:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19035:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19035:71:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19035:71:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19160:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19173:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19184:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19169:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19169:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19116:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19116:72:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19116:72:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19209:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19220:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19205:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19205:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19229:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19235:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19225:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19225:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19198:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19198:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19198:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19255:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "19325:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19334:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19263:61:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19263:76:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19255:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "19406:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19419:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19430:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19415:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19415:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19349:56:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19349:85:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19349:85:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "19488:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19501:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19512:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19497:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19497:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19444:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19444:73:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19444:73:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_contract$_IERC20_$77_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18928:9:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "18940:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "18948:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "18956:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18964:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18972:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18983:4:6",
                            "type": ""
                          }
                        ],
                        "src": "18747:777:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19730:440:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19740:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19752:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19763:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19748:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19748:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19740:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19821:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19834:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19845:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19830:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19830:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19777:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19777:71:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19777:71:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19902:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19915:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19926:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19911:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19911:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19858:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19858:72:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19858:72:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19951:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19962:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19947:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19947:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19971:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19977:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19967:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19967:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19940:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19940:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19940:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19997:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "20067:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20076:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20005:61:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20005:76:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19997:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "20135:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20148:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20159:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20144:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20144:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20091:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20091:72:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20091:72:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19678:9:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "19690:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "19698:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "19706:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19714:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19725:4:6",
                            "type": ""
                          }
                        ],
                        "src": "19530:640:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20292:193:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20302:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20314:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20325:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20310:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20310:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20302:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20349:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20360:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20345:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20345:17:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "20368:4:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20374:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20364:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20364:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20338:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20338:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20338:47:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20394:84:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20464:6:6"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20473:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20402:61:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20402:76:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20394:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20264:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20276:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20287:4:6",
                            "type": ""
                          }
                        ],
                        "src": "20176:309:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20545:87:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20555:11:6",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "20563:3:6"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "20555:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20583:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20586:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20576:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20576:14:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20576:14:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20599:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20617:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20620:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20607:9:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20607:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "20599:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "20532:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "20540:4:6",
                            "type": ""
                          }
                        ],
                        "src": "20491:141:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20682:49:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20692:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20710:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20717:2:6",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20706:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20706:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20722:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "20702:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20702:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "20692:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "divide_by_32_ceil",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20665:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "20675:6:6",
                            "type": ""
                          }
                        ],
                        "src": "20638:93:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20790:54:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20800:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "bits",
                                    "nodeType": "YulIdentifier",
                                    "src": "20825:4:6"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20831:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "20821:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20821:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "20800:8:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_left_dynamic",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "bits",
                            "nodeType": "YulTypedName",
                            "src": "20765:4:6",
                            "type": ""
                          },
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20771:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "20781:8:6",
                            "type": ""
                          }
                        ],
                        "src": "20737:107:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20926:317:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20936:35:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "shiftBytes",
                                    "nodeType": "YulIdentifier",
                                    "src": "20957:10:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20969:1:6",
                                    "type": "",
                                    "value": "8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "20953:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20953:18:6"
                              },
                              "variables": [
                                {
                                  "name": "shiftBits",
                                  "nodeType": "YulTypedName",
                                  "src": "20940:9:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20980:109:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "shiftBits",
                                    "nodeType": "YulIdentifier",
                                    "src": "21011:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21022:66:6",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_left_dynamic",
                                  "nodeType": "YulIdentifier",
                                  "src": "20992:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20992:97:6"
                              },
                              "variables": [
                                {
                                  "name": "mask",
                                  "nodeType": "YulTypedName",
                                  "src": "20984:4:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21098:51:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "shiftBits",
                                    "nodeType": "YulIdentifier",
                                    "src": "21129:9:6"
                                  },
                                  {
                                    "name": "toInsert",
                                    "nodeType": "YulIdentifier",
                                    "src": "21140:8:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_left_dynamic",
                                  "nodeType": "YulIdentifier",
                                  "src": "21110:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21110:39:6"
                              },
                              "variableNames": [
                                {
                                  "name": "toInsert",
                                  "nodeType": "YulIdentifier",
                                  "src": "21098:8:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21158:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21171:5:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "mask",
                                        "nodeType": "YulIdentifier",
                                        "src": "21182:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "21178:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21178:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21167:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21167:21:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "21158:5:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21197:40:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21210:5:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "toInsert",
                                        "nodeType": "YulIdentifier",
                                        "src": "21221:8:6"
                                      },
                                      {
                                        "name": "mask",
                                        "nodeType": "YulIdentifier",
                                        "src": "21231:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "21217:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21217:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "21207:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21207:30:6"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "21197:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "update_byte_slice_dynamic32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20887:5:6",
                            "type": ""
                          },
                          {
                            "name": "shiftBytes",
                            "nodeType": "YulTypedName",
                            "src": "20894:10:6",
                            "type": ""
                          },
                          {
                            "name": "toInsert",
                            "nodeType": "YulTypedName",
                            "src": "20906:8:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "20919:6:6",
                            "type": ""
                          }
                        ],
                        "src": "20850:393:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21309:82:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21319:66:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "21377:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "21359:17:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21359:24:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nodeType": "YulIdentifier",
                                      "src": "21350:8:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21350:34:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "21332:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21332:53:6"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "21319:9:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21289:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "21299:9:6",
                            "type": ""
                          }
                        ],
                        "src": "21249:142:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21444:28:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21454:12:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21461:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "21454:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "prepare_store_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21430:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "21440:3:6",
                            "type": ""
                          }
                        ],
                        "src": "21397:75:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21554:193:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21564:63:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21619:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint256_to_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "21588:30:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21588:39:6"
                              },
                              "variables": [
                                {
                                  "name": "convertedValue_0",
                                  "nodeType": "YulTypedName",
                                  "src": "21568:16:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "21643:4:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "21683:4:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "21677:5:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21677:11:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "21690:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "convertedValue_0",
                                            "nodeType": "YulIdentifier",
                                            "src": "21722:16:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "prepare_store_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "21698:23:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21698:41:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "update_byte_slice_dynamic32",
                                      "nodeType": "YulIdentifier",
                                      "src": "21649:27:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21649:91:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21636:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21636:105:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21636:105:6"
                            }
                          ]
                        },
                        "name": "update_storage_value_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "21531:4:6",
                            "type": ""
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "21537:6:6",
                            "type": ""
                          },
                          {
                            "name": "value_0",
                            "nodeType": "YulTypedName",
                            "src": "21545:7:6",
                            "type": ""
                          }
                        ],
                        "src": "21478:269:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21802:24:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21812:8:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21819:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "21812:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "zero_value_for_split_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "21798:3:6",
                            "type": ""
                          }
                        ],
                        "src": "21753:73:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21885:136:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21895:46:6",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "zero_value_for_split_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "21909:30:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21909:32:6"
                              },
                              "variables": [
                                {
                                  "name": "zero_0",
                                  "nodeType": "YulTypedName",
                                  "src": "21899:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "21994:4:6"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "22000:6:6"
                                  },
                                  {
                                    "name": "zero_0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22008:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "update_storage_value_t_uint256_to_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "21950:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21950:65:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21950:65:6"
                            }
                          ]
                        },
                        "name": "storage_set_to_zero_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "21871:4:6",
                            "type": ""
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "21877:6:6",
                            "type": ""
                          }
                        ],
                        "src": "21832:189:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22077:136:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22144:63:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "22188:5:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22195:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "storage_set_to_zero_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "22158:29:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22158:39:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22158:39:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "22097:5:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "22104:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22094:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22094:14:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "22109:26:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "22111:22:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "22124:5:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22131:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "22120:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22120:13:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulIdentifier",
                                        "src": "22111:5:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "22091:2:6",
                                "statements": []
                              },
                              "src": "22087:120:6"
                            }
                          ]
                        },
                        "name": "clear_storage_range_t_bytes1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "22065:5:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22072:3:6",
                            "type": ""
                          }
                        ],
                        "src": "22027:186:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22298:464:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22324:431:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "22338:54:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "22386:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_t_string_storage",
                                        "nodeType": "YulIdentifier",
                                        "src": "22354:31:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22354:38:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "dataArea",
                                        "nodeType": "YulTypedName",
                                        "src": "22342:8:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "22405:63:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataArea",
                                          "nodeType": "YulIdentifier",
                                          "src": "22428:8:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "startIndex",
                                              "nodeType": "YulIdentifier",
                                              "src": "22456:10:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "divide_by_32_ceil",
                                            "nodeType": "YulIdentifier",
                                            "src": "22438:17:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "22438:29:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "22424:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22424:44:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "22409:11:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "22625:27:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "22627:23:6",
                                          "value": {
                                            "name": "dataArea",
                                            "nodeType": "YulIdentifier",
                                            "src": "22642:8:6"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "22627:11:6"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "22609:10:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22621:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "22606:2:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22606:18:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "22603:49:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "deleteStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "22694:11:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "dataArea",
                                              "nodeType": "YulIdentifier",
                                              "src": "22711:8:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "22739:3:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "divide_by_32_ceil",
                                                "nodeType": "YulIdentifier",
                                                "src": "22721:17:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "22721:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "22707:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "22707:37:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "clear_storage_range_t_bytes1",
                                        "nodeType": "YulIdentifier",
                                        "src": "22665:28:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22665:80:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22665:80:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "22315:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22320:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22312:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22312:11:6"
                              },
                              "nodeType": "YulIf",
                              "src": "22309:446:6"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "22274:5:6",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "22281:3:6",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "22286:10:6",
                            "type": ""
                          }
                        ],
                        "src": "22219:543:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22831:54:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22841:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "bits",
                                    "nodeType": "YulIdentifier",
                                    "src": "22866:4:6"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22872:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "22862:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22862:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "22841:8:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_unsigned_dynamic",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "bits",
                            "nodeType": "YulTypedName",
                            "src": "22806:4:6",
                            "type": ""
                          },
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22812:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "22822:8:6",
                            "type": ""
                          }
                        ],
                        "src": "22768:117:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22942:118:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22952:68:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23001:1:6",
                                            "type": "",
                                            "value": "8"
                                          },
                                          {
                                            "name": "bytes",
                                            "nodeType": "YulIdentifier",
                                            "src": "23004:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "22997:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22997:13:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "23016:1:6",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "23012:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23012:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_unsigned_dynamic",
                                      "nodeType": "YulIdentifier",
                                      "src": "22968:28:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22968:51:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "22964:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22964:56:6"
                              },
                              "variables": [
                                {
                                  "name": "mask",
                                  "nodeType": "YulTypedName",
                                  "src": "22956:4:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23029:25:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "23043:4:6"
                                  },
                                  {
                                    "name": "mask",
                                    "nodeType": "YulIdentifier",
                                    "src": "23049:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "23039:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23039:15:6"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "23029:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mask_bytes_dynamic",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "22919:4:6",
                            "type": ""
                          },
                          {
                            "name": "bytes",
                            "nodeType": "YulTypedName",
                            "src": "22925:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "22935:6:6",
                            "type": ""
                          }
                        ],
                        "src": "22891:169:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23146:214:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23279:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "23306:4:6"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "23312:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mask_bytes_dynamic",
                                  "nodeType": "YulIdentifier",
                                  "src": "23287:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23287:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "23279:4:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23325:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "23336:4:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23346:1:6",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "23349:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "23342:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23342:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "23333:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23333:21:6"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "23325:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "23127:4:6",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "23133:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "23141:4:6",
                            "type": ""
                          }
                        ],
                        "src": "23065:295:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23457:1303:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "23468:51:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "23515:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "23482:32:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23482:37:6"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "23472:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23604:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "23606:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23606:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23606:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "23576:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23584:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "23573:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23573:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "23570:56:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "23636:52:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "23682:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "23676:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23676:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nodeType": "YulIdentifier",
                                  "src": "23650:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23650:38:6"
                              },
                              "variables": [
                                {
                                  "name": "oldLen",
                                  "nodeType": "YulTypedName",
                                  "src": "23640:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "23781:4:6"
                                  },
                                  {
                                    "name": "oldLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "23787:6:6"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "23795:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_t_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "23735:45:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23735:67:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23735:67:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "23812:18:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23829:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "23816:9:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23840:17:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23853:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "23840:9:6"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "23904:611:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "23918:37:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "23937:6:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "23949:4:6",
                                                  "type": "",
                                                  "value": "0x1f"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "23945:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "23945:9:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "23933:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "23933:22:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "23922:7:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "23969:51:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "24015:4:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_t_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "23983:31:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "23983:37:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "23973:6:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "24033:10:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "24042:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "24037:1:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "24101:163:6",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "24126:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "24144:3:6"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "24149:9:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "24140:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "24140:19:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "24134:5:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "24134:26:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24119:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24119:42:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "24119:42:6"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "24178:24:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "24192:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "24200:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24188:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24188:14:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24178:6:6"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "24219:31:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "24236:9:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "24247:2:6",
                                                    "type": "",
                                                    "value": "32"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24232:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24232:18:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24219:9:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "24067:1:6"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "24070:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "24064:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24064:14:6"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "24079:21:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "24081:17:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "24090:1:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "24093:4:6",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24086:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24086:12:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24081:1:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "24060:3:6",
                                          "statements": []
                                        },
                                        "src": "24056:208:6"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "24300:156:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "24318:43:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "24345:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "24350:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "24341:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "24341:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24335:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24335:26:6"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "24322:9:6",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "24385:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "24412:9:6"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "24427:6:6"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "24435:4:6",
                                                            "type": "",
                                                            "value": "0x1f"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "and",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "24423:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "24423:17:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mask_bytes_dynamic",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "24393:18:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "24393:48:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24378:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24378:64:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "24378:64:6"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "24283:7:6"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "24292:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "24280:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24280:19:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "24277:179:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "24476:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "24490:6:6"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "24498:1:6",
                                                      "type": "",
                                                      "value": "2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mul",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "24486:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "24486:14:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "24502:1:6",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "24482:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "24482:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "24469:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24469:36:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "24469:36:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "23897:618:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23902:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "24532:222:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "24546:14:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "24559:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "24550:5:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "24583:67:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "24601:35:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "24620:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "24625:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "24616:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "24616:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24610:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24610:26:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24601:5:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "24576:6:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "24573:77:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "24670:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24729:5:6"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24736:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "24676:52:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "24676:67:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "24663:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24663:81:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "24663:81:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "24524:230:6",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "23877:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23885:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "23874:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23874:14:6"
                              },
                              "nodeType": "YulSwitch",
                              "src": "23867:887:6"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "23446:4:6",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "23452:3:6",
                            "type": ""
                          }
                        ],
                        "src": "23365:1395:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24819:87:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24829:11:6",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "24837:3:6"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "24829:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24857:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "24860:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24850:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24850:14:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24850:14:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24873:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24891:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24894:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "24881:9:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24881:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "24873:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "24806:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "24814:4:6",
                            "type": ""
                          }
                        ],
                        "src": "24766:140:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24990:463:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25016:430:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25030:53:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "25077:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_t_bytes_storage",
                                        "nodeType": "YulIdentifier",
                                        "src": "25046:30:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25046:37:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "dataArea",
                                        "nodeType": "YulTypedName",
                                        "src": "25034:8:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25096:63:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataArea",
                                          "nodeType": "YulIdentifier",
                                          "src": "25119:8:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "startIndex",
                                              "nodeType": "YulIdentifier",
                                              "src": "25147:10:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "divide_by_32_ceil",
                                            "nodeType": "YulIdentifier",
                                            "src": "25129:17:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25129:29:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "25115:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25115:44:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "25100:11:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "25316:27:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "25318:23:6",
                                          "value": {
                                            "name": "dataArea",
                                            "nodeType": "YulIdentifier",
                                            "src": "25333:8:6"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "25318:11:6"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "25300:10:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "25312:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "25297:2:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25297:18:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "25294:49:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "deleteStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "25385:11:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "dataArea",
                                              "nodeType": "YulIdentifier",
                                              "src": "25402:8:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "25430:3:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "divide_by_32_ceil",
                                                "nodeType": "YulIdentifier",
                                                "src": "25412:17:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "25412:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "25398:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25398:37:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "clear_storage_range_t_bytes1",
                                        "nodeType": "YulIdentifier",
                                        "src": "25356:28:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25356:80:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25356:80:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "25007:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25012:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25004:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25004:11:6"
                              },
                              "nodeType": "YulIf",
                              "src": "25001:445:6"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_t_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "24966:5:6",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "24973:3:6",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "24978:10:6",
                            "type": ""
                          }
                        ],
                        "src": "24912:541:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25549:1300:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "25560:50:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "25606:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "25574:31:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25574:36:6"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "25564:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25695:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "25697:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25697:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25697:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "25667:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25675:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25664:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25664:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "25661:56:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "25727:52:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "25773:4:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "25767:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25767:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nodeType": "YulIdentifier",
                                  "src": "25741:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25741:38:6"
                              },
                              "variables": [
                                {
                                  "name": "oldLen",
                                  "nodeType": "YulTypedName",
                                  "src": "25731:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "25871:4:6"
                                  },
                                  {
                                    "name": "oldLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "25877:6:6"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "25885:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_t_bytes_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "25826:44:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25826:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25826:66:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "25902:18:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25919:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "25906:9:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25930:17:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25943:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "25930:9:6"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "25994:610:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "26008:37:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "26027:6:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "26039:4:6",
                                                  "type": "",
                                                  "value": "0x1f"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "26035:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26035:9:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "26023:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26023:22:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "26012:7:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "26059:50:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "26104:4:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_t_bytes_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "26073:30:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26073:36:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "26063:6:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "26122:10:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26131:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "26126:1:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "26190:163:6",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26215:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26233:3:6"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26238:9:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26229:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "26229:19:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "26223:5:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "26223:26:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26208:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26208:42:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "26208:42:6"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "26267:24:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26281:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "26289:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26277:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26277:14:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26267:6:6"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "26308:31:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26325:9:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "26336:2:6",
                                                    "type": "",
                                                    "value": "32"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26321:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26321:18:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26308:9:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "26156:1:6"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "26159:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "26153:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26153:14:6"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "26168:21:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "26170:17:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26179:1:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "26182:4:6",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26175:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26175:12:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26170:1:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "26149:3:6",
                                          "statements": []
                                        },
                                        "src": "26145:208:6"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "26389:156:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "26407:43:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26434:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26439:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "26430:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "26430:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26424:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26424:26:6"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "26411:9:6",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26474:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26501:9:6"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26516:6:6"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "26524:4:6",
                                                            "type": "",
                                                            "value": "0x1f"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "and",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26512:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "26512:17:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mask_bytes_dynamic",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "26482:18:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "26482:48:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26467:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26467:64:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "26467:64:6"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "26372:7:6"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "26381:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "26369:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26369:19:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "26366:179:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "26565:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "26579:6:6"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "26587:1:6",
                                                      "type": "",
                                                      "value": "2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mul",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26575:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26575:14:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "26591:1:6",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "26571:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26571:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "26558:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26558:36:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "26558:36:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "25987:617:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25992:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "26621:222:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "26635:14:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26648:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "26639:5:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "26672:67:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "26690:35:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26709:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26714:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "26705:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "26705:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26699:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "26699:26:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26690:5:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "26665:6:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "26662:77:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "26759:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26818:5:6"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26825:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "26765:52:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26765:67:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "26752:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "26752:81:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "26752:81:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "26613:230:6",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "25967:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25975:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25964:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25964:14:6"
                              },
                              "nodeType": "YulSwitch",
                              "src": "25957:886:6"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "25538:4:6",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "25544:3:6",
                            "type": ""
                          }
                        ],
                        "src": "25459:1390:6"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct IOptimisticOracleV2.RequestSettings\n    function abi_decode_t_struct$_RequestSettings_$474_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xe0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xe0)\n\n        {\n            // eventBased\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // refundOnDispute\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackOnPriceProposed\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackOnPriceDisputed\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackOnPriceSettled\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // bond\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // customLiveness\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // struct IOptimisticOracleV2.Request\n    function abi_decode_t_struct$_Request_$497_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0200) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // proposer\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // disputer\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // currency\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // settled\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // requestSettings\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_struct$_RequestSettings_$474_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // proposedPrice\n\n            let offset := 352\n\n            mstore(add(value, 0xa0), abi_decode_t_int256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // resolvedPrice\n\n            let offset := 384\n\n            mstore(add(value, 0xc0), abi_decode_t_int256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // expirationTime\n\n            let offset := 416\n\n            mstore(add(value, 0xe0), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // reward\n\n            let offset := 448\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // finalFee\n\n            let offset := 480\n\n            mstore(add(value, 0x0120), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Request_$497_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 512) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Request_$497_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_contract$_IERC20_$77_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80636ad0690a116100715780636ad0690a1461017657806370480275146101945780638bad0c0a146101b057806394c5d4fe146101ba57806395addb90146101d6578063bdb9e4db14610209576100a9565b8063021eb009146100ae5780631785f53c146100ca57806320147a0b146100e657806324d7806c14610116578063429b62e514610146575b600080fd5b6100c860048036038101906100c391906110e8565b610239565b005b6100e460048036038101906100df9190611173565b6102bb565b005b61010060048036038101906100fb91906111d6565b6103d4565b60405161010d919061121c565b60405180910390f35b610130600480360381019061012b9190611173565b61067f565b60405161013d9190611252565b60405180910390f35b610160600480360381019061015b9190611173565b6106ca565b60405161016d919061127c565b60405180910390f35b61017e6106e2565b60405161018b919061127c565b60405180910390f35b6101ae60048036038101906101a99190611173565b6106e8565b005b6101b8610801565b005b6101d460048036038101906101cf91906111d6565b610919565b005b6101f060048036038101906101eb91906111d6565b610bd7565b6040516102009493929190611385565b60405180910390f35b610223600480360381019061021e9190611574565b610dac565b6040516102309190611634565b60405180910390f35b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146102b1576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060058190555050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610333576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e60405160405180910390a350565b600080600460008481526020019081526020016000206040518060800160405290816000820180546104059061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546104319061167e565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b505050505081526020016001820180546104979061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546104c39061167e565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b505050505081526020016002820180546105299061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546105559061167e565b80156105a25780601f10610577576101008083540402835291602001916105a2565b820191906000526020600020905b81548152906001019060200180831161058557829003601f168201915b505050505081526020016003820160009054906101000a900460ff1615151515815250509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9904f9b3060025460035485604001516040518563ffffffff1660e01b815260040161063194939291906116be565b61020060405180830381865afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610673919061197c565b60c00151915050919050565b600060016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054149050919050565b60006020528060005260406000206000915090505481565b60055481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610760576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc60405160405180910390a350565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610879576040517f7bfa4b9f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f787a2e12f4a55b658b8f573c32432ee11a5e8b51677d1e1e937aaf6a0bb5776e60405160405180910390a3565b6000600460008381526020019081526020016000206040518060800160405290816000820180546109499061167e565b80601f01602080910402602001604051908101604052809291908181526020018280546109759061167e565b80156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b505050505081526020016001820180546109db9061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a079061167e565b8015610a545780601f10610a2957610100808354040283529160200191610a54565b820191906000526020600020905b815481529060010190602001808311610a3757829003601f168201915b50505050508152602001600282018054610a6d9061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a999061167e565b8015610ae65780601f10610abb57610100808354040283529160200191610ae6565b820191906000526020600020905b815481529060010190602001808311610ac957829003601f168201915b505050505081526020016003820160009054906101000a900460ff1615151515815250509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e9a79a93060025460035485604001516040518563ffffffff1660e01b8152600401610b7594939291906116be565b6020604051808303816000875af1158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb891906119aa565b50610bd3828260000151836020015184604001516001610ffc565b5050565b6004602052806000526040600020600091509050806000018054610bfa9061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c269061167e565b8015610c735780601f10610c4857610100808354040283529160200191610c73565b820191906000526020600020905b815481529060010190602001808311610c5657829003601f168201915b505050505090806001018054610c889061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb49061167e565b8015610d015780601f10610cd657610100808354040283529160200191610d01565b820191906000526020600020905b815481529060010190602001808311610ce457829003601f168201915b505050505090806002018054610d169061167e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d429061167e565b8015610d8f5780601f10610d6457610100808354040283529160200191610d8f565b820191906000526020600020905b815481529060010190602001808311610d7257829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6000426003819055506000739b4a302a548c7e313c2b74c461db7b84d3074a84905060008084905080805190602001209350610e74848a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050846000610ffc565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311df92f16002546003548487876040518663ffffffff1660e01b8152600401610edb959493929190611a36565b6020604051808303816000875af1158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e91906119aa565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663473c45fe600254600354846005546040518563ffffffff1660e01b8152600401610f869493929190611a90565b600060405180830381600087803b158015610fa057600080fd5b505af1158015610fb4573d6000803e3d6000fd5b50505050837ff0f7f4e8df0afc32374e8c8a070dd345a4b6321861869a555976c21703f73d9a82604051610fe89190611adc565b60405180910390a250505095945050505050565b60405180608001604052808581526020018481526020018381526020018215158152506004600087815260200190815260200160002060008201518160000190816110479190611ca0565b50602082015181600101908161105d9190611ca0565b5060408201518160020190816110739190611dcd565b5060608201518160030160006101000a81548160ff0219169083151502179055509050505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110c5816110b2565b81146110d057600080fd5b50565b6000813590506110e2816110bc565b92915050565b6000602082840312156110fe576110fd6110a8565b5b600061110c848285016110d3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b600060208284031215611189576111886110a8565b5b60006111978482850161115e565b91505092915050565b6000819050919050565b6111b3816111a0565b81146111be57600080fd5b50565b6000813590506111d0816111aa565b92915050565b6000602082840312156111ec576111eb6110a8565b5b60006111fa848285016111c1565b91505092915050565b6000819050919050565b61121681611203565b82525050565b6000602082019050611231600083018461120d565b92915050565b60008115159050919050565b61124c81611237565b82525050565b60006020820190506112676000830184611243565b92915050565b611276816110b2565b82525050565b6000602082019050611291600083018461126d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112d15780820151818401526020810190506112b6565b838111156112e0576000848401525b50505050565b6000601f19601f8301169050919050565b600061130282611297565b61130c81856112a2565b935061131c8185602086016112b3565b611325816112e6565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b600061135782611330565b611361818561133b565b93506113718185602086016112b3565b61137a816112e6565b840191505092915050565b6000608082019050818103600083015261139f81876112f7565b905081810360208301526113b381866112f7565b905081810360408301526113c7818561134c565b90506113d66060830184611243565b95945050505050565b600080fd5b600080fd5b600080fd5b60008083601f840112611404576114036113df565b5b8235905067ffffffffffffffff811115611421576114206113e4565b5b60208301915083600182028301111561143d5761143c6113e9565b5b9250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611481826112e6565b810181811067ffffffffffffffff821117156114a05761149f611449565b5b80604052505050565b60006114b361109e565b90506114bf8282611478565b919050565b600067ffffffffffffffff8211156114df576114de611449565b5b6114e8826112e6565b9050602081019050919050565b82818337600083830152505050565b6000611517611512846114c4565b6114a9565b90508281526020810184848401111561153357611532611444565b5b61153e8482856114f5565b509392505050565b600082601f83011261155b5761155a6113df565b5b813561156b848260208601611504565b91505092915050565b6000806000806000606086880312156115905761158f6110a8565b5b600086013567ffffffffffffffff8111156115ae576115ad6110ad565b5b6115ba888289016113ee565b9550955050602086013567ffffffffffffffff8111156115dd576115dc6110ad565b5b6115e9888289016113ee565b9350935050604086013567ffffffffffffffff81111561160c5761160b6110ad565b5b61161888828901611546565b9150509295509295909350565b61162e816111a0565b82525050565b60006020820190506116496000830184611625565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061169657607f821691505b6020821081036116a9576116a861164f565b5b50919050565b6116b881611135565b82525050565b60006080820190506116d360008301876116af565b6116e06020830186611625565b6116ed604083018561126d565b81810360608301526116ff818461134c565b905095945050505050565b600080fd5b60008151905061171e81611147565b92915050565b600061172f82611135565b9050919050565b61173f81611724565b811461174a57600080fd5b50565b60008151905061175c81611736565b92915050565b61176b81611237565b811461177657600080fd5b50565b60008151905061178881611762565b92915050565b60008151905061179d816110bc565b92915050565b600060e082840312156117b9576117b861170a565b5b6117c360e06114a9565b905060006117d384828501611779565b60008301525060206117e784828501611779565b60208301525060406117fb84828501611779565b604083015250606061180f84828501611779565b606083015250608061182384828501611779565b60808301525060a06118378482850161178e565b60a08301525060c061184b8482850161178e565b60c08301525092915050565b61186081611203565b811461186b57600080fd5b50565b60008151905061187d81611857565b92915050565b6000610200828403121561189a5761189961170a565b5b6118a56101406114a9565b905060006118b58482850161170f565b60008301525060206118c98482850161170f565b60208301525060406118dd8482850161174d565b60408301525060606118f184828501611779565b6060830152506080611905848285016117a3565b60808301525061016061191a8482850161186e565b60a08301525061018061192f8482850161186e565b60c0830152506101a06119448482850161178e565b60e0830152506101c06119598482850161178e565b610100830152506101e061196f8482850161178e565b6101208301525092915050565b60006102008284031215611993576119926110a8565b5b60006119a184828501611883565b91505092915050565b6000602082840312156119c0576119bf6110a8565b5b60006119ce8482850161178e565b91505092915050565b6000819050919050565b60006119fc6119f76119f284611115565b6119d7565b611115565b9050919050565b6000611a0e826119e1565b9050919050565b6000611a2082611a03565b9050919050565b611a3081611a15565b82525050565b600060a082019050611a4b6000830188611625565b611a58602083018761126d565b8181036040830152611a6a818661134c565b9050611a796060830185611a27565b611a86608083018461126d565b9695505050505050565b6000608082019050611aa56000830187611625565b611ab2602083018661126d565b8181036040830152611ac4818561134c565b9050611ad3606083018461126d565b95945050505050565b60006020820190508181036000830152611af6818461134c565b905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b23565b611b6a8683611b23565b95508019841693508086168417925050509392505050565b6000611b9d611b98611b93846110b2565b6119d7565b6110b2565b9050919050565b6000819050919050565b611bb783611b82565b611bcb611bc382611ba4565b848454611b30565b825550505050565b600090565b611be0611bd3565b611beb818484611bae565b505050565b5b81811015611c0f57611c04600082611bd8565b600181019050611bf1565b5050565b601f821115611c5457611c2581611afe565b611c2e84611b13565b81016020851015611c3d578190505b611c51611c4985611b13565b830182611bf0565b50505b505050565b600082821c905092915050565b6000611c7760001984600802611c59565b1980831691505092915050565b6000611c908383611c66565b9150826002028217905092915050565b611ca982611297565b67ffffffffffffffff811115611cc257611cc1611449565b5b611ccc825461167e565b611cd7828285611c13565b600060209050601f831160018114611d0a5760008415611cf8578287015190505b611d028582611c84565b865550611d6a565b601f198416611d1886611afe565b60005b82811015611d4057848901518255600182019150602085019450602081019050611d1b565b86831015611d5d5784890151611d59601f891682611c66565b8355505b6001600288020188555050505b505050505050565b60008190508160005260206000209050919050565b601f821115611dc857611d9981611d72565b611da284611b13565b81016020851015611db1578190505b611dc5611dbd85611b13565b830182611bf0565b50505b505050565b611dd682611330565b67ffffffffffffffff811115611def57611dee611449565b5b611df9825461167e565b611e04828285611d87565b600060209050601f831160018114611e375760008415611e25578287015190505b611e2f8582611c84565b865550611e97565b601f198416611e4586611d72565b60005b82811015611e6d57848901518255600182019150602085019450602081019050611e48565b86831015611e8a5784890151611e86601f891682611c66565b8355505b6001600288020188555050505b50505050505056fea26469706673582212207a498ba66cf72e737f499cbe911a263f4834315692a147e00245c565bbc5a71764736f6c634300080f0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AD0690A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6AD0690A EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x94C5D4FE EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x95ADDB90 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xBDB9E4DB EQ PUSH2 0x209 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x21EB009 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x20147A0B EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x121C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0x801 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1574 JUMP JUMPDEST PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x787A2E12F4A55B658B8F573C32432EE11A5E8B51677D1E1E937AAF6A0BB5776E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x453 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x497 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C3 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x510 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x510 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x529 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x555 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x577 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x585 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9904F9B ADDRESS PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x200 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9FFABCA9C8276E99321725BCB43FB076A6C66A54B7F21C4E8146D8519B417DC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7BFA4B9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x787A2E12F4A55B658B8F573C32432EE11A5E8B51677D1E1E937AAF6A0BB5776E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x949 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x975 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x997 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x9DB SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA07 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA54 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA29 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA54 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA37 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA6D SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5E9A79A9 ADDRESS PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST POP PUSH2 0xBD3 DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH2 0xFFC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xBFA SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC26 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC73 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC48 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC73 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC56 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC88 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCB4 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD01 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCD6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD01 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCE4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xD16 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD42 SWAP1 PUSH2 0x167E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD64 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD72 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0x9B4A302A548C7E313C2B74C461DB7B84D3074A84 SWAP1 POP PUSH1 0x0 DUP1 DUP5 SWAP1 POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP4 POP PUSH2 0xE74 DUP5 DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP5 PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x11DF92F1 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP5 DUP8 DUP8 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x473C45FE PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD DUP5 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A90 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH32 0xF0F7F4E8DF0AFC32374E8C8A070DD345A4B6321861869A555976C21703F73D9A DUP3 PUSH1 0x40 MLOAD PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1047 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C5 DUP2 PUSH2 0x10B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E2 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10FD PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x110C DUP5 DUP3 DUP6 ADD PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP2 EQ PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116D DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1197 DUP5 DUP3 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B3 DUP2 PUSH2 0x11A0 JUMP JUMPDEST DUP2 EQ PUSH2 0x11BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D0 DUP2 PUSH2 0x11AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11FA DUP5 DUP3 DUP6 ADD PUSH2 0x11C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1216 DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1231 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x120D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124C DUP2 PUSH2 0x1237 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1267 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1276 DUP2 PUSH2 0x10B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1291 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x126D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12D1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12B6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1302 DUP3 PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x130C DUP2 DUP6 PUSH2 0x12A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x131C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x1325 DUP2 PUSH2 0x12E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1357 DUP3 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x1361 DUP2 DUP6 PUSH2 0x133B JUMP JUMPDEST SWAP4 POP PUSH2 0x1371 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x12E6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x139F DUP2 DUP8 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13B3 DUP2 DUP7 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13C7 DUP2 DUP6 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP PUSH2 0x13D6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x13DF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1421 JUMPI PUSH2 0x1420 PUSH2 0x13E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x13E9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1481 DUP3 PUSH2 0x12E6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x1449 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B3 PUSH2 0x109E JUMP JUMPDEST SWAP1 POP PUSH2 0x14BF DUP3 DUP3 PUSH2 0x1478 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14DF JUMPI PUSH2 0x14DE PUSH2 0x1449 JUMP JUMPDEST JUMPDEST PUSH2 0x14E8 DUP3 PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1517 PUSH2 0x1512 DUP5 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1533 JUMPI PUSH2 0x1532 PUSH2 0x1444 JUMP JUMPDEST JUMPDEST PUSH2 0x153E DUP5 DUP3 DUP6 PUSH2 0x14F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x155B JUMPI PUSH2 0x155A PUSH2 0x13DF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x156B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1504 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1590 JUMPI PUSH2 0x158F PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15AE JUMPI PUSH2 0x15AD PUSH2 0x10AD JUMP JUMPDEST JUMPDEST PUSH2 0x15BA DUP9 DUP3 DUP10 ADD PUSH2 0x13EE JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x10AD JUMP JUMPDEST JUMPDEST PUSH2 0x15E9 DUP9 DUP3 DUP10 ADD PUSH2 0x13EE JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x10AD JUMP JUMPDEST JUMPDEST PUSH2 0x1618 DUP9 DUP3 DUP10 ADD PUSH2 0x1546 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x162E DUP2 PUSH2 0x11A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1649 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1696 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x164F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B8 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16D3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x16E0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x16ED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x126D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16FF DUP2 DUP5 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x171E DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172F DUP3 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173F DUP2 PUSH2 0x1724 JUMP JUMPDEST DUP2 EQ PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x175C DUP2 PUSH2 0x1736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x176B DUP2 PUSH2 0x1237 JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1788 DUP2 PUSH2 0x1762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x179D DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH2 0x17C3 PUSH1 0xE0 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x17E7 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x17FB DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x180F DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1823 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x1837 DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x184B DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1860 DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP2 EQ PUSH2 0x186B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x187D DUP2 PUSH2 0x1857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH2 0x18A5 PUSH2 0x140 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18B5 DUP5 DUP3 DUP6 ADD PUSH2 0x170F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x18C9 DUP5 DUP3 DUP6 ADD PUSH2 0x170F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x18DD DUP5 DUP3 DUP6 ADD PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x18F1 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x1905 DUP5 DUP3 DUP6 ADD PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH2 0x160 PUSH2 0x191A DUP5 DUP3 DUP6 ADD PUSH2 0x186E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x192F DUP5 DUP3 DUP6 ADD PUSH2 0x186E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x1A0 PUSH2 0x1944 DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x1C0 PUSH2 0x1959 DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x1E0 PUSH2 0x196F DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1993 JUMPI PUSH2 0x1992 PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A1 DUP5 DUP3 DUP6 ADD PUSH2 0x1883 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x10A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CE DUP5 DUP3 DUP6 ADD PUSH2 0x178E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FC PUSH2 0x19F7 PUSH2 0x19F2 DUP5 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0E DUP3 PUSH2 0x19E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 DUP3 PUSH2 0x1A03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A30 DUP2 PUSH2 0x1A15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1A58 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x126D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A6A DUP2 DUP7 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A79 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A86 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x126D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AA5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x1AB2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x126D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1AC4 DUP2 DUP6 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x126D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 DUP5 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1B60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x1B6A DUP7 DUP4 PUSH2 0x1B23 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9D PUSH2 0x1B98 PUSH2 0x1B93 DUP5 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB7 DUP4 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x1BCB PUSH2 0x1BC3 DUP3 PUSH2 0x1BA4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B30 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1BE0 PUSH2 0x1BD3 JUMP JUMPDEST PUSH2 0x1BEB DUP2 DUP5 DUP5 PUSH2 0x1BAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C04 PUSH1 0x0 DUP3 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1BF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1C54 JUMPI PUSH2 0x1C25 DUP2 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1C2E DUP5 PUSH2 0x1B13 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C3D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1C51 PUSH2 0x1C49 DUP6 PUSH2 0x1B13 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1BF0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C77 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1C59 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C90 DUP4 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA9 DUP3 PUSH2 0x1297 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC2 JUMPI PUSH2 0x1CC1 PUSH2 0x1449 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCC DUP3 SLOAD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1CD7 DUP3 DUP3 DUP6 PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1CF8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D02 DUP6 DUP3 PUSH2 0x1C84 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D18 DUP7 PUSH2 0x1AFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D40 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1D5D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1D59 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C66 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1DC8 JUMPI PUSH2 0x1D99 DUP2 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1DA2 DUP5 PUSH2 0x1B13 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DB1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1DC5 PUSH2 0x1DBD DUP6 PUSH2 0x1B13 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1BF0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DD6 DUP3 PUSH2 0x1330 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DEF JUMPI PUSH2 0x1DEE PUSH2 0x1449 JUMP JUMPDEST JUMPDEST PUSH2 0x1DF9 DUP3 SLOAD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1E04 DUP3 DUP3 DUP6 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E37 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1E25 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1E2F DUP6 DUP3 PUSH2 0x1C84 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1E45 DUP7 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E6D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E48 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E8A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E86 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1C66 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x498BA66CF72E737F499CBE911A263F4834315692A147E00245C565 0xBB 0xC5 0xA7 OR PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
              "sourceMap": "243:4165:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;743:135:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3651:360:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1180:101:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;228:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1328:23:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:128:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;943:134;;;:::i;:::-;;3159:359:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1272:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1985:1012;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1562:94;333:1:5;311:6;:18;318:10;311:18;;;;;;;;;;;;;;;;:23;307:46;;343:10;;;;;;;;;;;;;;307:46;1640:9:1::1;1629:8;:20;;;;1562:94:::0;:::o;743:135:5:-;333:1;311:6;:18;318:10;311:18;;;;;;;;;;;;;;;;:23;307:46;;343:10;;;;;;;;;;;;;;307:46;824:1:::1;808:6:::0;:13:::1;815:5;808:13;;;;;;;;;;;;;;;:17;;;;865:5;840:31;;853:10;840:31;;;;;;;;;;;;743:135:::0;:::o;3651:360:1:-;3716:6;3734:25;3762:9;:21;3772:10;3762:21;;;;;;;;;;;3734:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3812:2;;;;;;;;;;;:26;;;3864:4;3887:10;;3915:11;;3944:5;:19;;;3812:165;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:192;;;3793:211;;;3651:360;;;:::o;1180:101:5:-;1234:4;1273:1;1257:6;:12;1264:4;1257:12;;;;;;;;;;;;;;;;:17;1250:24;;1180:101;;;:::o;228:41::-;;;;;;;;;;;;;;;;;:::o;1328:23:1:-;;;;:::o;514:128:5:-;333:1;311:6;:18;318:10;311:18;;;;;;;;;;;;;;;;:23;307:46;;343:10;;;;;;;;;;;;;;307:46;592:1:::1;576:6;:13:::0;583:5:::1;576:13;;;;;;;;;;;;;;;:17;;;;629:5;608:27;;617:10;608:27;;;;;;;;;;;;514:128:::0;:::o;943:134::-;333:1;311:6;:18;318:10;311:18;;;;;;;;;;;;;;;;:23;307:46;;343:10;;;;;;;;;;;;;;307:46;1018:1:::1;997:6:::0;:18:::1;1004:10;997:18;;;;;;;;;;;;;;;:22;;;;1059:10;1034:36;;1047:10;1034:36;;;;;;;;;;;;943:134::o:0;3159:359:1:-;3219:25;3247:9;:21;3257:10;3247:21;;;;;;;;;;;3219:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3278:2;;;;;;;;;;;:9;;;3296:4;3303:10;;3315:11;;3328:5;:19;;;3278:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3358:153;3385:10;3409:5;:13;;;3436:5;:14;;;3464:5;:19;;;3497:4;3358:13;:153::i;:::-;3209:309;3159:359;:::o;1272:49::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1985:1012::-;2136:18;2180:15;2166:11;:29;;;;2256:19;2298:42;2256:94;;2360:14;2460:26;2495:15;2460:51;;2544:13;2534:24;;;;;;2521:37;;2568:66;2582:10;2594:7;;2568:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:8;;2568:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2613:13;2628:5;2568:13;:66::i;:::-;2701:2;;;;;;;;;;;:15;;;2730:10;;2754:11;;2779:13;2806:12;2832:6;2701:147;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2858:2;;;;;;;;;;;:20;;;2879:10;;2891:11;;2904:13;2919:8;;2858:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2964:10;2944:46;2976:13;2944:46;;;;;;:::i;:::-;;;;;;;;2156:841;;;1985:1012;;;;;;;:::o;4017:389::-;4239:160;;;;;;;;4275:7;4239:160;;;;4306:8;4239:160;;;;4343:13;4239:160;;;;4380:8;4239:160;;;;;4215:9;:21;4225:10;4215:21;;;;;;;;;;;:184;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4017:389;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:77::-;1904:7;1933:5;1922:16;;1867:77;;;:::o;1950:122::-;2023:24;2041:5;2023:24;:::i;:::-;2016:5;2013:35;2003:63;;2062:1;2059;2052:12;2003:63;1950:122;:::o;2078:139::-;2124:5;2162:6;2149:20;2140:29;;2178:33;2205:5;2178:33;:::i;:::-;2078:139;;;;:::o;2223:329::-;2282:6;2331:2;2319:9;2310:7;2306:23;2302:32;2299:119;;;2337:79;;:::i;:::-;2299:119;2457:1;2482:53;2527:7;2518:6;2507:9;2503:22;2482:53;:::i;:::-;2472:63;;2428:117;2223:329;;;;:::o;2558:76::-;2594:7;2623:5;2612:16;;2558:76;;;:::o;2640:115::-;2725:23;2742:5;2725:23;:::i;:::-;2720:3;2713:36;2640:115;;:::o;2761:218::-;2852:4;2890:2;2879:9;2875:18;2867:26;;2903:69;2969:1;2958:9;2954:17;2945:6;2903:69;:::i;:::-;2761:218;;;;:::o;2985:90::-;3019:7;3062:5;3055:13;3048:21;3037:32;;2985:90;;;:::o;3081:109::-;3162:21;3177:5;3162:21;:::i;:::-;3157:3;3150:34;3081:109;;:::o;3196:210::-;3283:4;3321:2;3310:9;3306:18;3298:26;;3334:65;3396:1;3385:9;3381:17;3372:6;3334:65;:::i;:::-;3196:210;;;;:::o;3412:118::-;3499:24;3517:5;3499:24;:::i;:::-;3494:3;3487:37;3412:118;;:::o;3536:222::-;3629:4;3667:2;3656:9;3652:18;3644:26;;3680:71;3748:1;3737:9;3733:17;3724:6;3680:71;:::i;:::-;3536:222;;;;:::o;3764:99::-;3816:6;3850:5;3844:12;3834:22;;3764:99;;;:::o;3869:169::-;3953:11;3987:6;3982:3;3975:19;4027:4;4022:3;4018:14;4003:29;;3869:169;;;;:::o;4044:307::-;4112:1;4122:113;4136:6;4133:1;4130:13;4122:113;;;4221:1;4216:3;4212:11;4206:18;4202:1;4197:3;4193:11;4186:39;4158:2;4155:1;4151:10;4146:15;;4122:113;;;4253:6;4250:1;4247:13;4244:101;;;4333:1;4324:6;4319:3;4315:16;4308:27;4244:101;4093:258;4044:307;;;:::o;4357:102::-;4398:6;4449:2;4445:7;4440:2;4433:5;4429:14;4425:28;4415:38;;4357:102;;;:::o;4465:364::-;4553:3;4581:39;4614:5;4581:39;:::i;:::-;4636:71;4700:6;4695:3;4636:71;:::i;:::-;4629:78;;4716:52;4761:6;4756:3;4749:4;4742:5;4738:16;4716:52;:::i;:::-;4793:29;4815:6;4793:29;:::i;:::-;4788:3;4784:39;4777:46;;4557:272;4465:364;;;;:::o;4835:98::-;4886:6;4920:5;4914:12;4904:22;;4835:98;;;:::o;4939:168::-;5022:11;5056:6;5051:3;5044:19;5096:4;5091:3;5087:14;5072:29;;4939:168;;;;:::o;5113:360::-;5199:3;5227:38;5259:5;5227:38;:::i;:::-;5281:70;5344:6;5339:3;5281:70;:::i;:::-;5274:77;;5360:52;5405:6;5400:3;5393:4;5386:5;5382:16;5360:52;:::i;:::-;5437:29;5459:6;5437:29;:::i;:::-;5432:3;5428:39;5421:46;;5203:270;5113:360;;;;:::o;5479:810::-;5708:4;5746:3;5735:9;5731:19;5723:27;;5796:9;5790:4;5786:20;5782:1;5771:9;5767:17;5760:47;5824:78;5897:4;5888:6;5824:78;:::i;:::-;5816:86;;5949:9;5943:4;5939:20;5934:2;5923:9;5919:18;5912:48;5977:78;6050:4;6041:6;5977:78;:::i;:::-;5969:86;;6102:9;6096:4;6092:20;6087:2;6076:9;6072:18;6065:48;6130:76;6201:4;6192:6;6130:76;:::i;:::-;6122:84;;6216:66;6278:2;6267:9;6263:18;6254:6;6216:66;:::i;:::-;5479:810;;;;;;;:::o;6295:117::-;6404:1;6401;6394:12;6418:117;6527:1;6524;6517:12;6541:117;6650:1;6647;6640:12;6678:553;6736:8;6746:6;6796:3;6789:4;6781:6;6777:17;6773:27;6763:122;;6804:79;;:::i;:::-;6763:122;6917:6;6904:20;6894:30;;6947:18;6939:6;6936:30;6933:117;;;6969:79;;:::i;:::-;6933:117;7083:4;7075:6;7071:17;7059:29;;7137:3;7129:4;7121:6;7117:17;7107:8;7103:32;7100:41;7097:128;;;7144:79;;:::i;:::-;7097:128;6678:553;;;;;:::o;7237:117::-;7346:1;7343;7336:12;7360:180;7408:77;7405:1;7398:88;7505:4;7502:1;7495:15;7529:4;7526:1;7519:15;7546:281;7629:27;7651:4;7629:27;:::i;:::-;7621:6;7617:40;7759:6;7747:10;7744:22;7723:18;7711:10;7708:34;7705:62;7702:88;;;7770:18;;:::i;:::-;7702:88;7810:10;7806:2;7799:22;7589:238;7546:281;;:::o;7833:129::-;7867:6;7894:20;;:::i;:::-;7884:30;;7923:33;7951:4;7943:6;7923:33;:::i;:::-;7833:129;;;:::o;7968:308::-;8030:4;8120:18;8112:6;8109:30;8106:56;;;8142:18;;:::i;:::-;8106:56;8180:29;8202:6;8180:29;:::i;:::-;8172:37;;8264:4;8258;8254:15;8246:23;;7968:308;;;:::o;8282:154::-;8366:6;8361:3;8356;8343:30;8428:1;8419:6;8414:3;8410:16;8403:27;8282:154;;;:::o;8442:412::-;8520:5;8545:66;8561:49;8603:6;8561:49;:::i;:::-;8545:66;:::i;:::-;8536:75;;8634:6;8627:5;8620:21;8672:4;8665:5;8661:16;8710:3;8701:6;8696:3;8692:16;8689:25;8686:112;;;8717:79;;:::i;:::-;8686:112;8807:41;8841:6;8836:3;8831;8807:41;:::i;:::-;8526:328;8442:412;;;;;:::o;8874:340::-;8930:5;8979:3;8972:4;8964:6;8960:17;8956:27;8946:122;;8987:79;;:::i;:::-;8946:122;9104:6;9091:20;9129:79;9204:3;9196:6;9189:4;9181:6;9177:17;9129:79;:::i;:::-;9120:88;;8936:278;8874:340;;;;:::o;9220:1199::-;9331:6;9339;9347;9355;9363;9412:2;9400:9;9391:7;9387:23;9383:32;9380:119;;;9418:79;;:::i;:::-;9380:119;9566:1;9555:9;9551:17;9538:31;9596:18;9588:6;9585:30;9582:117;;;9618:79;;:::i;:::-;9582:117;9731:65;9788:7;9779:6;9768:9;9764:22;9731:65;:::i;:::-;9713:83;;;;9509:297;9873:2;9862:9;9858:18;9845:32;9904:18;9896:6;9893:30;9890:117;;;9926:79;;:::i;:::-;9890:117;10039:65;10096:7;10087:6;10076:9;10072:22;10039:65;:::i;:::-;10021:83;;;;9816:298;10181:2;10170:9;10166:18;10153:32;10212:18;10204:6;10201:30;10198:117;;;10234:79;;:::i;:::-;10198:117;10339:63;10394:7;10385:6;10374:9;10370:22;10339:63;:::i;:::-;10329:73;;10124:288;9220:1199;;;;;;;;:::o;10425:118::-;10512:24;10530:5;10512:24;:::i;:::-;10507:3;10500:37;10425:118;;:::o;10549:222::-;10642:4;10680:2;10669:9;10665:18;10657:26;;10693:71;10761:1;10750:9;10746:17;10737:6;10693:71;:::i;:::-;10549:222;;;;:::o;10777:180::-;10825:77;10822:1;10815:88;10922:4;10919:1;10912:15;10946:4;10943:1;10936:15;10963:320;11007:6;11044:1;11038:4;11034:12;11024:22;;11091:1;11085:4;11081:12;11112:18;11102:81;;11168:4;11160:6;11156:17;11146:27;;11102:81;11230:2;11222:6;11219:14;11199:18;11196:38;11193:84;;11249:18;;:::i;:::-;11193:84;11014:269;10963:320;;;:::o;11289:118::-;11376:24;11394:5;11376:24;:::i;:::-;11371:3;11364:37;11289:118;;:::o;11413:640::-;11608:4;11646:3;11635:9;11631:19;11623:27;;11660:71;11728:1;11717:9;11713:17;11704:6;11660:71;:::i;:::-;11741:72;11809:2;11798:9;11794:18;11785:6;11741:72;:::i;:::-;11823;11891:2;11880:9;11876:18;11867:6;11823:72;:::i;:::-;11942:9;11936:4;11932:20;11927:2;11916:9;11912:18;11905:48;11970:76;12041:4;12032:6;11970:76;:::i;:::-;11962:84;;11413:640;;;;;;;:::o;12059:117::-;12168:1;12165;12158:12;12305:143;12362:5;12393:6;12387:13;12378:22;;12409:33;12436:5;12409:33;:::i;:::-;12305:143;;;;:::o;12454:109::-;12504:7;12533:24;12551:5;12533:24;:::i;:::-;12522:35;;12454:109;;;:::o;12569:148::-;12655:37;12686:5;12655:37;:::i;:::-;12648:5;12645:48;12635:76;;12707:1;12704;12697:12;12635:76;12569:148;:::o;12723:169::-;12793:5;12824:6;12818:13;12809:22;;12840:46;12880:5;12840:46;:::i;:::-;12723:169;;;;:::o;12898:116::-;12968:21;12983:5;12968:21;:::i;:::-;12961:5;12958:32;12948:60;;13004:1;13001;12994:12;12948:60;12898:116;:::o;13020:137::-;13074:5;13105:6;13099:13;13090:22;;13121:30;13145:5;13121:30;:::i;:::-;13020:137;;;;:::o;13163:143::-;13220:5;13251:6;13245:13;13236:22;;13267:33;13294:5;13267:33;:::i;:::-;13163:143;;;;:::o;13362:1545::-;13454:5;13498:4;13486:9;13481:3;13477:19;13473:30;13470:117;;;13506:79;;:::i;:::-;13470:117;13605:21;13621:4;13605:21;:::i;:::-;13596:30;;13691:1;13731:57;13784:3;13775:6;13764:9;13760:22;13731:57;:::i;:::-;13724:4;13717:5;13713:16;13706:83;13636:164;13870:2;13911:57;13964:3;13955:6;13944:9;13940:22;13911:57;:::i;:::-;13904:4;13897:5;13893:16;13886:83;13810:170;14058:2;14099:57;14152:3;14143:6;14132:9;14128:22;14099:57;:::i;:::-;14092:4;14085:5;14081:16;14074:83;13990:178;14246:2;14287:57;14340:3;14331:6;14320:9;14316:22;14287:57;:::i;:::-;14280:4;14273:5;14269:16;14262:83;14178:178;14433:3;14475:57;14528:3;14519:6;14508:9;14504:22;14475:57;:::i;:::-;14468:4;14461:5;14457:16;14450:83;14366:178;14603:3;14645:60;14701:3;14692:6;14681:9;14677:22;14645:60;:::i;:::-;14638:4;14631:5;14627:16;14620:86;14554:163;14786:3;14828:60;14884:3;14875:6;14864:9;14860:22;14828:60;:::i;:::-;14821:4;14814:5;14810:16;14803:86;14727:173;13362:1545;;;;:::o;14913:120::-;14985:23;15002:5;14985:23;:::i;:::-;14978:5;14975:34;14965:62;;15023:1;15020;15013:12;14965:62;14913:120;:::o;15039:141::-;15095:5;15126:6;15120:13;15111:22;;15142:32;15168:5;15142:32;:::i;:::-;15039:141;;;;:::o;15228:2096::-;15312:5;15356:6;15344:9;15339:3;15335:19;15331:32;15328:119;;;15366:79;;:::i;:::-;15328:119;15465:23;15481:6;15465:23;:::i;:::-;15456:32;;15551:1;15591:60;15647:3;15638:6;15627:9;15623:22;15591:60;:::i;:::-;15584:4;15577:5;15573:16;15566:86;15498:165;15726:2;15767:60;15823:3;15814:6;15803:9;15799:22;15767:60;:::i;:::-;15760:4;15753:5;15749:16;15742:86;15673:166;15902:2;15943:73;16012:3;16003:6;15992:9;15988:22;15943:73;:::i;:::-;15936:4;15929:5;15925:16;15918:99;15849:179;16090:2;16131:57;16184:3;16175:6;16164:9;16160:22;16131:57;:::i;:::-;16124:4;16117:5;16113:16;16106:83;16038:162;16270:3;16312:92;16400:3;16391:6;16380:9;16376:22;16312:92;:::i;:::-;16305:4;16298:5;16294:16;16287:118;16210:206;16484:3;16526:59;16581:3;16572:6;16561:9;16557:22;16526:59;:::i;:::-;16519:4;16512:5;16508:16;16501:85;16426:171;16665:3;16707:59;16762:3;16753:6;16742:9;16738:22;16707:59;:::i;:::-;16700:4;16693:5;16689:16;16682:85;16607:171;16847:3;16889:60;16945:3;16936:6;16925:9;16921:22;16889:60;:::i;:::-;16882:4;16875:5;16871:16;16864:86;16788:173;17022:3;17066:60;17122:3;17113:6;17102:9;17098:22;17066:60;:::i;:::-;17057:6;17050:5;17046:18;17039:88;16971:167;17201:3;17245:60;17301:3;17292:6;17281:9;17277:22;17245:60;:::i;:::-;17236:6;17229:5;17225:18;17218:88;17148:169;15228:2096;;;;:::o;17330:400::-;17424:6;17473:3;17461:9;17452:7;17448:23;17444:33;17441:120;;;17480:79;;:::i;:::-;17441:120;17600:1;17625:88;17705:7;17696:6;17685:9;17681:22;17625:88;:::i;:::-;17615:98;;17571:152;17330:400;;;;:::o;17736:351::-;17806:6;17855:2;17843:9;17834:7;17830:23;17826:32;17823:119;;;17861:79;;:::i;:::-;17823:119;17981:1;18006:64;18062:7;18053:6;18042:9;18038:22;18006:64;:::i;:::-;17996:74;;17952:128;17736:351;;;;:::o;18093:60::-;18121:3;18142:5;18135:12;;18093:60;;;:::o;18159:142::-;18209:9;18242:53;18260:34;18269:24;18287:5;18269:24;:::i;:::-;18260:34;:::i;:::-;18242:53;:::i;:::-;18229:66;;18159:142;;;:::o;18307:126::-;18357:9;18390:37;18421:5;18390:37;:::i;:::-;18377:50;;18307:126;;;:::o;18439:139::-;18502:9;18535:37;18566:5;18535:37;:::i;:::-;18522:50;;18439:139;;;:::o;18584:157::-;18684:50;18728:5;18684:50;:::i;:::-;18679:3;18672:63;18584:157;;:::o;18747:777::-;18983:4;19021:3;19010:9;19006:19;18998:27;;19035:71;19103:1;19092:9;19088:17;19079:6;19035:71;:::i;:::-;19116:72;19184:2;19173:9;19169:18;19160:6;19116:72;:::i;:::-;19235:9;19229:4;19225:20;19220:2;19209:9;19205:18;19198:48;19263:76;19334:4;19325:6;19263:76;:::i;:::-;19255:84;;19349:85;19430:2;19419:9;19415:18;19406:6;19349:85;:::i;:::-;19444:73;19512:3;19501:9;19497:19;19488:6;19444:73;:::i;:::-;18747:777;;;;;;;;:::o;19530:640::-;19725:4;19763:3;19752:9;19748:19;19740:27;;19777:71;19845:1;19834:9;19830:17;19821:6;19777:71;:::i;:::-;19858:72;19926:2;19915:9;19911:18;19902:6;19858:72;:::i;:::-;19977:9;19971:4;19967:20;19962:2;19951:9;19947:18;19940:48;20005:76;20076:4;20067:6;20005:76;:::i;:::-;19997:84;;20091:72;20159:2;20148:9;20144:18;20135:6;20091:72;:::i;:::-;19530:640;;;;;;;:::o;20176:309::-;20287:4;20325:2;20314:9;20310:18;20302:26;;20374:9;20368:4;20364:20;20360:1;20349:9;20345:17;20338:47;20402:76;20473:4;20464:6;20402:76;:::i;:::-;20394:84;;20176:309;;;;:::o;20491:141::-;20540:4;20563:3;20555:11;;20586:3;20583:1;20576:14;20620:4;20617:1;20607:18;20599:26;;20491:141;;;:::o;20638:93::-;20675:6;20722:2;20717;20710:5;20706:14;20702:23;20692:33;;20638:93;;;:::o;20737:107::-;20781:8;20831:5;20825:4;20821:16;20800:37;;20737:107;;;;:::o;20850:393::-;20919:6;20969:1;20957:10;20953:18;20992:97;21022:66;21011:9;20992:97;:::i;:::-;21110:39;21140:8;21129:9;21110:39;:::i;:::-;21098:51;;21182:4;21178:9;21171:5;21167:21;21158:30;;21231:4;21221:8;21217:19;21210:5;21207:30;21197:40;;20926:317;;20850:393;;;;;:::o;21249:142::-;21299:9;21332:53;21350:34;21359:24;21377:5;21359:24;:::i;:::-;21350:34;:::i;:::-;21332:53;:::i;:::-;21319:66;;21249:142;;;:::o;21397:75::-;21440:3;21461:5;21454:12;;21397:75;;;:::o;21478:269::-;21588:39;21619:7;21588:39;:::i;:::-;21649:91;21698:41;21722:16;21698:41;:::i;:::-;21690:6;21683:4;21677:11;21649:91;:::i;:::-;21643:4;21636:105;21554:193;21478:269;;;:::o;21753:73::-;21798:3;21753:73;:::o;21832:189::-;21909:32;;:::i;:::-;21950:65;22008:6;22000;21994:4;21950:65;:::i;:::-;21885:136;21832:189;;:::o;22027:186::-;22087:120;22104:3;22097:5;22094:14;22087:120;;;22158:39;22195:1;22188:5;22158:39;:::i;:::-;22131:1;22124:5;22120:13;22111:22;;22087:120;;;22027:186;;:::o;22219:543::-;22320:2;22315:3;22312:11;22309:446;;;22354:38;22386:5;22354:38;:::i;:::-;22438:29;22456:10;22438:29;:::i;:::-;22428:8;22424:44;22621:2;22609:10;22606:18;22603:49;;;22642:8;22627:23;;22603:49;22665:80;22721:22;22739:3;22721:22;:::i;:::-;22711:8;22707:37;22694:11;22665:80;:::i;:::-;22324:431;;22309:446;22219:543;;;:::o;22768:117::-;22822:8;22872:5;22866:4;22862:16;22841:37;;22768:117;;;;:::o;22891:169::-;22935:6;22968:51;23016:1;23012:6;23004:5;23001:1;22997:13;22968:51;:::i;:::-;22964:56;23049:4;23043;23039:15;23029:25;;22942:118;22891:169;;;;:::o;23065:295::-;23141:4;23287:29;23312:3;23306:4;23287:29;:::i;:::-;23279:37;;23349:3;23346:1;23342:11;23336:4;23333:21;23325:29;;23065:295;;;;:::o;23365:1395::-;23482:37;23515:3;23482:37;:::i;:::-;23584:18;23576:6;23573:30;23570:56;;;23606:18;;:::i;:::-;23570:56;23650:38;23682:4;23676:11;23650:38;:::i;:::-;23735:67;23795:6;23787;23781:4;23735:67;:::i;:::-;23829:1;23853:4;23840:17;;23885:2;23877:6;23874:14;23902:1;23897:618;;;;24559:1;24576:6;24573:77;;;24625:9;24620:3;24616:19;24610:26;24601:35;;24573:77;24676:67;24736:6;24729:5;24676:67;:::i;:::-;24670:4;24663:81;24532:222;23867:887;;23897:618;23949:4;23945:9;23937:6;23933:22;23983:37;24015:4;23983:37;:::i;:::-;24042:1;24056:208;24070:7;24067:1;24064:14;24056:208;;;24149:9;24144:3;24140:19;24134:26;24126:6;24119:42;24200:1;24192:6;24188:14;24178:24;;24247:2;24236:9;24232:18;24219:31;;24093:4;24090:1;24086:12;24081:17;;24056:208;;;24292:6;24283:7;24280:19;24277:179;;;24350:9;24345:3;24341:19;24335:26;24393:48;24435:4;24427:6;24423:17;24412:9;24393:48;:::i;:::-;24385:6;24378:64;24300:156;24277:179;24502:1;24498;24490:6;24486:14;24482:22;24476:4;24469:36;23904:611;;;23867:887;;23457:1303;;;23365:1395;;:::o;24766:140::-;24814:4;24837:3;24829:11;;24860:3;24857:1;24850:14;24894:4;24891:1;24881:18;24873:26;;24766:140;;;:::o;24912:541::-;25012:2;25007:3;25004:11;25001:445;;;25046:37;25077:5;25046:37;:::i;:::-;25129:29;25147:10;25129:29;:::i;:::-;25119:8;25115:44;25312:2;25300:10;25297:18;25294:49;;;25333:8;25318:23;;25294:49;25356:80;25412:22;25430:3;25412:22;:::i;:::-;25402:8;25398:37;25385:11;25356:80;:::i;:::-;25016:430;;25001:445;24912:541;;;:::o;25459:1390::-;25574:36;25606:3;25574:36;:::i;:::-;25675:18;25667:6;25664:30;25661:56;;;25697:18;;:::i;:::-;25661:56;25741:38;25773:4;25767:11;25741:38;:::i;:::-;25826:66;25885:6;25877;25871:4;25826:66;:::i;:::-;25919:1;25943:4;25930:17;;25975:2;25967:6;25964:14;25992:1;25987:617;;;;26648:1;26665:6;26662:77;;;26714:9;26709:3;26705:19;26699:26;26690:35;;26662:77;26765:67;26825:6;26818:5;26765:67;:::i;:::-;26759:4;26752:81;26621:222;25957:886;;25987:617;26039:4;26035:9;26027:6;26023:22;26073:36;26104:4;26073:36;:::i;:::-;26131:1;26145:208;26159:7;26156:1;26153:14;26145:208;;;26238:9;26233:3;26229:19;26223:26;26215:6;26208:42;26289:1;26281:6;26277:14;26267:24;;26336:2;26325:9;26321:18;26308:31;;26182:4;26179:1;26175:12;26170:17;;26145:208;;;26381:6;26372:7;26369:19;26366:179;;;26439:9;26434:3;26430:19;26424:26;26482:48;26524:4;26516:6;26512:17;26501:9;26482:48;:::i;:::-;26474:6;26467:64;26389:156;26366:179;26591:1;26587;26579:6;26575:14;26571:22;26565:4;26558:36;25994:610;;;25957:886;;25549:1300;;;25459:1390;;:::o"
            },
            "methodIdentifiers": {
              "addAdmin(address)": "70480275",
              "admins(address)": "429b62e5",
              "getSettledData(bytes32)": "20147a0b",
              "isAdmin(address)": "24d7806c",
              "liveness()": "6ad0690a",
              "questions(bytes32)": "95addb90",
              "removeAdmin(address)": "1785f53c",
              "renounceAdmin()": "8bad0c0a",
              "requestData(string,string,string)": "bdb9e4db",
              "setLiveness(uint256)": "021eb009",
              "settleRequest(bytes32)": "94c5d4fe"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"QuestionInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"getSettledData\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"creator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"marketID\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"creator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"marketID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ancillaryString\",\"type\":\"string\"}],\"name\":\"requestData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liveness\",\"type\":\"uint256\"}],\"name\":\"setLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"}],\"name\":\"settleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin\"}},\"getSettledData(bytes32)\":{\"params\":{\"questionID\":\": questionID of a market\"}},\"isAdmin(address)\":{\"params\":{\"addr\":\"- The address to be checked\"}},\"removeAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin to be removed\"}},\"requestData(string,string,string)\":{\"params\":{\"ancillaryString\":\": the description of market ex: \\\"Q:Did the temperature on the 25th of July 2022 in Manhattan NY exceed 35c? A:1 for yes. 0 for no.\\\"\",\"creator\":\": address of creator in SUI\",\"marketID\":\": marketID in sweepstake\"}},\"setLiveness(uint256)\":{\"params\":{\"_liveness\":\": liveness of the request\"}},\"settleRequest(bytes32)\":{\"params\":{\"questionID\":\": questionID of a market\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Adds an Admin\"},\"admins(address)\":{\"notice\":\"Auth\"},\"isAdmin(address)\":{\"notice\":\"Checks if an address is an admin\"},\"removeAdmin(address)\":{\"notice\":\"Removes an admin\"},\"renounceAdmin()\":{\"notice\":\"Renounces Admin privileges from the caller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SweepstakeUma.sol\":\"SweepstakeUma\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9a7c516237b09d07d74d015fd2fdf15f601f807fbeb99374a5d3083d1feaab86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d461d762d4f6a77ad33663ae0125ba9b73558b82c85a8e30e19b2c6ddc0d805c\",\"dweb:/ipfs/QmULfo1kCzU9tjyv4t6GHdctCNYAx53zWLzpf6UVvyaXad\"]},\"contracts/SweepstakeUma.sol\":{\"keccak256\":\"0x118e8fa3bc15d97f91deb31c466ffc5928512be4706cd9c9e9186c55d2258001\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ceb919e7d6323ae99028ee0a610515e1df93a61097e90c08a429198ea763d28\",\"dweb:/ipfs/QmRWRjhjz4A3SKhjba2cKKiTZQPrmQzXw2TP75JpkRyXDK\"]},\"contracts/interfaces/IAuth.sol\":{\"keccak256\":\"0xc3ec2b588856d11ad47ac65bdb9b2e9c94f1c4012b8a4e19e3f243c4e0bb95d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95efcbbadbc71fd721e3731da4114b10bac07cef3587d7de850728e998cbefcf\",\"dweb:/ipfs/QmNuzZksifypzzjmxUhPWqaEy4HKp5TKbyT6N3hMqZvayy\"]},\"contracts/interfaces/IFinder.sol\":{\"keccak256\":\"0x136e238a05caba2eb2ca12e4dd0a34d8a0338525b91c8ecc89e58b894f82c483\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c345192142ff24e0ab8d8f2c2565ecf3e9808e69d100b7b93a38533f4ccea565\",\"dweb:/ipfs/QmZvrh4VFW28tuJGS7VJd6vZizabfRnwy8Ygb55yABxanL\"]},\"contracts/interfaces/IOptimisticOracleV2.sol\":{\"keccak256\":\"0xf705eff6ad98bb16322260e1a5b47258d5426f2ba8f89250ed1f116ea0ad60cd\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ef19116c94d60a7401e392cba3a364669aad8b2a116d8e3f1b8e9f0b3be8bcaf\",\"dweb:/ipfs/QmeqPfqMfQPS1yXnCp6JMYfE25gwM31EPx4wYJQkZERdY1\"]},\"contracts/mixins/Auth.sol\":{\"keccak256\":\"0x4952f4e099d5068482ec3668e47662f9a10884beb74e78d15799d4a012d1af48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e3580afafe9d4bf1cfa65e70be1384288c190d72a9c7d8897c58710029b682f\",\"dweb:/ipfs/QmXD5PjnGQp36184uDqDej7JZmWwwZjkcfCJxPHXpvqADU\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAuth.sol": {
        "IAuth": {
          "abi": [
            {
              "inputs": [],
              "name": "NotAdmin",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newAdminAddress",
                  "type": "address"
                }
              ],
              "name": "NewAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "removedAdmin",
                  "type": "address"
                }
              ],
              "name": "RemovedAdmin",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "addAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isAdmin",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "removeAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addAdmin(address)": "70480275",
              "isAdmin(address)": "24d7806c",
              "removeAdmin(address)": "1785f53c",
              "renounceAdmin()": "8bad0c0a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAuth.sol\":\"IAuth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAuth.sol\":{\"keccak256\":\"0xc3ec2b588856d11ad47ac65bdb9b2e9c94f1c4012b8a4e19e3f243c4e0bb95d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95efcbbadbc71fd721e3731da4114b10bac07cef3587d7de850728e998cbefcf\",\"dweb:/ipfs/QmNuzZksifypzzjmxUhPWqaEy4HKp5TKbyT6N3hMqZvayy\"]}},\"version\":1}"
        },
        "IAuthEE": {
          "abi": [
            {
              "inputs": [],
              "name": "NotAdmin",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newAdminAddress",
                  "type": "address"
                }
              ],
              "name": "NewAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "removedAdmin",
                  "type": "address"
                }
              ],
              "name": "RemovedAdmin",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAuth.sol\":\"IAuthEE\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAuth.sol\":{\"keccak256\":\"0xc3ec2b588856d11ad47ac65bdb9b2e9c94f1c4012b8a4e19e3f243c4e0bb95d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95efcbbadbc71fd721e3731da4114b10bac07cef3587d7de850728e998cbefcf\",\"dweb:/ipfs/QmNuzZksifypzzjmxUhPWqaEy4HKp5TKbyT6N3hMqZvayy\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IFinder.sol": {
        "IFinder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "interfaceName",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "implementationAddress",
                  "type": "address"
                }
              ],
              "name": "changeImplementationAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "interfaceName",
                  "type": "bytes32"
                }
              ],
              "name": "getImplementationAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "changeImplementationAddress(bytes32,address)": "31f9665e",
              "getImplementationAddress(bytes32)": "aafd5e40"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"changeImplementationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"}],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Examples are the Oracle or Store interfaces.\",\"kind\":\"dev\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"params\":{\"implementationAddress\":\"address of the deployed contract that implements the interface.\",\"interfaceName\":\"bytes32 encoding of the interface name that is either changed or registered.\"}},\"getImplementationAddress(bytes32)\":{\"params\":{\"interfaceName\":\"queried interface.\"},\"returns\":{\"_0\":\"implementationAddress address of the deployed contract that implements the interface.\"}}},\"title\":\"Provides addresses of the live contracts implementing certain interfaces.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"notice\":\"Updates the address of the contract that implements `interfaceName`.\"},\"getImplementationAddress(bytes32)\":{\"notice\":\"Gets the address of the contract that implements the given `interfaceName`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFinder.sol\":\"IFinder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFinder.sol\":{\"keccak256\":\"0x136e238a05caba2eb2ca12e4dd0a34d8a0338525b91c8ecc89e58b894f82c483\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c345192142ff24e0ab8d8f2c2565ecf3e9808e69d100b7b93a38533f4ccea565\",\"dweb:/ipfs/QmZvrh4VFW28tuJGS7VJd6vZizabfRnwy8Ygb55yABxanL\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IOptimisticOracleV2.sol": {
        "IOptimisticOracleV2": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "proposedPrice",
                  "type": "int256"
                }
              ],
              "name": "DisputePrice",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "proposedPrice",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "expirationTimestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                }
              ],
              "name": "ProposePrice",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "finalFee",
                  "type": "uint256"
                }
              ],
              "name": "RequestPrice",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "price",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                }
              ],
              "name": "Settle",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "ancillaryBytesLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultLiveness",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "disputePrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalBond",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "disputePriceFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalBond",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "finder",
              "outputs": [
                {
                  "internalType": "contract IFinder",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "getRequest",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "proposer",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "disputer",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "currency",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "settled",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "eventBased",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "refundOnDispute",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "callbackOnPriceProposed",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "callbackOnPriceDisputed",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "callbackOnPriceSettled",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "bond",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "customLiveness",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IOptimisticOracleV2.RequestSettings",
                      "name": "requestSettings",
                      "type": "tuple"
                    },
                    {
                      "internalType": "int256",
                      "name": "proposedPrice",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "resolvedPrice",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reward",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "finalFee",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IOptimisticOracleV2.Request",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "getState",
              "outputs": [
                {
                  "internalType": "enum IOptimisticOracleV2.State",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "hasPrice",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "int256",
                  "name": "proposedPrice",
                  "type": "int256"
                }
              ],
              "name": "proposePrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalBond",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "int256",
                  "name": "proposedPrice",
                  "type": "int256"
                }
              ],
              "name": "proposePriceFor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalBond",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "requestPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalBond",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "requests",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "settled",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "eventBased",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "refundOnDispute",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "callbackOnPriceProposed",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "callbackOnPriceDisputed",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "callbackOnPriceSettled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bond",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "customLiveness",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IOptimisticOracleV2.RequestSettings",
                  "name": "requestSettings",
                  "type": "tuple"
                },
                {
                  "internalType": "int256",
                  "name": "proposedPrice",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "resolvedPrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finalFee",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "bond",
                  "type": "uint256"
                }
              ],
              "name": "setBond",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalBond",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "callbackOnPriceProposed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "callbackOnPriceDisputed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "callbackOnPriceSettled",
                  "type": "bool"
                }
              ],
              "name": "setCallbacks",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "customLiveness",
                  "type": "uint256"
                }
              ],
              "name": "setCustomLiveness",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "setEventBased",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "setRefundOnDispute",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "settle",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "payout",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                }
              ],
              "name": "settleAndGetPrice",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ancillaryData",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "requester",
                  "type": "address"
                }
              ],
              "name": "stampAncillaryData",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "ancillaryBytesLimit()": "c371dda7",
              "defaultLiveness()": "fe4e1983",
              "disputePrice(address,bytes32,uint256,bytes)": "fba7f1e3",
              "disputePriceFor(address,address,bytes32,uint256,bytes)": "76c7823f",
              "finder()": "b9a3c84c",
              "getCurrentTime()": "29cb924d",
              "getRequest(address,bytes32,uint256,bytes)": "a9904f9b",
              "getState(address,bytes32,uint256,bytes)": "ba4b930c",
              "hasPrice(address,bytes32,uint256,bytes)": "bc58ccaa",
              "proposePrice(address,bytes32,uint256,bytes,int256)": "b8b4f908",
              "proposePriceFor(address,address,bytes32,uint256,bytes,int256)": "7c82288f",
              "requestPrice(bytes32,uint256,bytes,address,uint256)": "11df92f1",
              "requests(bytes32)": "9d866985",
              "setBond(bytes32,uint256,bytes,uint256)": "ad5a755a",
              "setCallbacks(bytes32,uint256,bytes,bool,bool,bool)": "f327b075",
              "setCustomLiveness(bytes32,uint256,bytes,uint256)": "473c45fe",
              "setEventBased(bytes32,uint256,bytes)": "120698af",
              "setRefundOnDispute(bytes32,uint256,bytes)": "91f58dcb",
              "settle(address,bytes32,uint256,bytes)": "5e9a79a9",
              "settleAndGetPrice(bytes32,uint256,bytes)": "53b59239",
              "stampAncillaryData(bytes,address)": "af5d2f39"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"DisputePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"ProposePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"name\":\"RequestPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Settle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract IFinder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"eventBased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct IOptimisticOracleV2.RequestSettings\",\"name\":\"requestSettings\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IOptimisticOracleV2.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum IOptimisticOracleV2.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"eventBased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct IOptimisticOracleV2.RequestSettings\",\"name\":\"requestSettings\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceProposed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceDisputed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"callbackOnPriceSettled\",\"type\":\"bool\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"name\":\"setCustomLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setEventBased\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setRefundOnDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settleAndGetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"stampAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect).\"}},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"disputer\":\"address to set as the disputer.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was value (the proposal was incorrect).\"}},\"getRequest(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the Request data structure.\"}},\"getState(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the State enum value.\"}},\"hasPrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"true if price has resolved or settled, false otherwise.\"}},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"proposer\":\"address to set as the proposer.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data representing additional args being passed with the price request.\",\"currency\":\"ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\",\"identifier\":\"price identifier being requested.\",\"reward\":\"reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.\",\"timestamp\":\"timestamp of the price being requested.\"},\"returns\":{\"totalBond\":\"default bond (final fee) + final fee that the proposer and disputer will be required to pay. This can be changed with a subsequent call to setBond().\"}},\"setBond(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"bond\":\"custom bond amount to set.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"new bond + final fee that the proposer and disputer will be required to pay. This can be changed again with a subsequent call to setBond().\"}},\"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"callbackOnPriceDisputed\":\"whether to enable the callback onPriceDisputed.\",\"callbackOnPriceProposed\":\"whether to enable the callback onPriceProposed.\",\"callbackOnPriceSettled\":\"whether to enable the callback onPriceSettled.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"customLiveness\":\"new custom liveness.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setEventBased(bytes32,uint256,bytes)\":{\"details\":\"Calling this method has a few impacts on the request: 1. The timestamp at which the request is evaluated is the time of the proposal, not the timestamp associated    with the request. 2. The proposer cannot propose the \\\"too early\\\" value (TOO_EARLY_RESPONSE). This is to ensure that a proposer who    prematurely proposes a response loses their bond. 3. RefundoOnDispute is automatically set, meaning disputes trigger the reward to be automatically refunded to    the requesting contract.\",\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"settle(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"payout\":\"the amount that the \\\"winner\\\" (proposer or disputer) receives on settlement. This amount includes the returned bonds as well as additional rewards.\"}},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"resolved price.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price value for an existing price request with an active proposal.\"},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price request with an active proposal on another address' behalf. Note: this address will receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\"},\"getRequest(address,bytes32,uint256,bytes)\":{\"notice\":\"Gets the current data structure containing all information about a price request.\"},\"getState(address,bytes32,uint256,bytes)\":{\"notice\":\"Returns the state of a price request.\"},\"hasPrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\"},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value for an existing price request.\"},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value on another address' behalf. Note: this address will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\"},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"notice\":\"Requests a new price.\"},\"setBond(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Set the proposal bond associated with a price request.\"},\"setCallbacks(bytes32,uint256,bytes,bool,bool,bool)\":{\"notice\":\"Sets which callbacks should be enabled for the request.\"},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before being auto-resolved.\"},\"setEventBased(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to be an \\\"event-based\\\" request.\"},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to refund the reward if the proposal is disputed. This can help to \\\"hedge\\\" the caller in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's bond, so there is still profit to be made even if the reward is refunded.\"},\"settle(address,bytes32,uint256,bytes)\":{\"notice\":\"Attempts to settle an outstanding price request. Will revert if it isn't settleable.\"},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"notice\":\"Retrieves a price that was previously requested by a caller. Reverts if the request is not settled or settleable. Note: this method is not view so that this call may actually settle the price request if it hasn't been settled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOptimisticOracleV2.sol\":\"IOptimisticOracleV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9a7c516237b09d07d74d015fd2fdf15f601f807fbeb99374a5d3083d1feaab86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d461d762d4f6a77ad33663ae0125ba9b73558b82c85a8e30e19b2c6ddc0d805c\",\"dweb:/ipfs/QmULfo1kCzU9tjyv4t6GHdctCNYAx53zWLzpf6UVvyaXad\"]},\"contracts/interfaces/IFinder.sol\":{\"keccak256\":\"0x136e238a05caba2eb2ca12e4dd0a34d8a0338525b91c8ecc89e58b894f82c483\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c345192142ff24e0ab8d8f2c2565ecf3e9808e69d100b7b93a38533f4ccea565\",\"dweb:/ipfs/QmZvrh4VFW28tuJGS7VJd6vZizabfRnwy8Ygb55yABxanL\"]},\"contracts/interfaces/IOptimisticOracleV2.sol\":{\"keccak256\":\"0xf705eff6ad98bb16322260e1a5b47258d5426f2ba8f89250ed1f116ea0ad60cd\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ef19116c94d60a7401e392cba3a364669aad8b2a116d8e3f1b8e9f0b3be8bcaf\",\"dweb:/ipfs/QmeqPfqMfQPS1yXnCp6JMYfE25gwM31EPx4wYJQkZERdY1\"]}},\"version\":1}"
        }
      },
      "contracts/mixins/Auth.sol": {
        "Auth": {
          "abi": [
            {
              "inputs": [],
              "name": "NotAdmin",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newAdminAddress",
                  "type": "address"
                }
              ],
              "name": "NewAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "removedAdmin",
                  "type": "address"
                }
              ],
              "name": "RemovedAdmin",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "addAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "admins",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "isAdmin",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "removeAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addAdmin(address)": "70480275",
              "admins(address)": "429b62e5",
              "isAdmin(address)": "24d7806c",
              "removeAdmin(address)": "1785f53c",
              "renounceAdmin()": "8bad0c0a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotAdmin\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin\"}},\"isAdmin(address)\":{\"params\":{\"addr\":\"- The address to be checked\"}},\"removeAdmin(address)\":{\"params\":{\"admin\":\"- The address of the admin to be removed\"}}},\"title\":\"Auth\",\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when a new admin is added\"},\"RemovedAdmin(address,address)\":{\"notice\":\"Emitted when an admin is removed\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Adds an Admin\"},\"admins(address)\":{\"notice\":\"Auth\"},\"isAdmin(address)\":{\"notice\":\"Checks if an address is an admin\"},\"removeAdmin(address)\":{\"notice\":\"Removes an admin\"},\"renounceAdmin()\":{\"notice\":\"Renounces Admin privileges from the caller\"}},\"notice\":\"Provides access control modifiers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mixins/Auth.sol\":\"Auth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAuth.sol\":{\"keccak256\":\"0xc3ec2b588856d11ad47ac65bdb9b2e9c94f1c4012b8a4e19e3f243c4e0bb95d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95efcbbadbc71fd721e3731da4114b10bac07cef3587d7de850728e998cbefcf\",\"dweb:/ipfs/QmNuzZksifypzzjmxUhPWqaEy4HKp5TKbyT6N3hMqZvayy\"]},\"contracts/mixins/Auth.sol\":{\"keccak256\":\"0x4952f4e099d5068482ec3668e47662f9a10884beb74e78d15799d4a012d1af48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e3580afafe9d4bf1cfa65e70be1384288c190d72a9c7d8897c58710029b682f\",\"dweb:/ipfs/QmXD5PjnGQp36184uDqDej7JZmWwwZjkcfCJxPHXpvqADU\"]}},\"version\":1}"
        }
      }
    }
  }
}